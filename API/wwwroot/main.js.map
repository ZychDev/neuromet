{"version":3,"file":"main.js","mappings":"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","sources":["./src/app/_guards/auth.guard.ts","./src/app/_interceptors/error.interceptor.ts","./src/app/_modules/shared.module.ts","./src/app/_services/account.service.ts","./src/app/app-routing.module.ts","./src/app/app.component.ts","./src/app/app.component.html","./src/app/app.module.ts","./src/app/contact/contact.component.ts","./src/app/contact/contact.component.html","./src/app/errors/not-found/not-found.component.ts","./src/app/errors/not-found/not-found.component.html","./src/app/errors/server-error/server-error.component.ts","./src/app/errors/server-error/server-error.component.html","./src/app/errors/test-errors/test-errors.component.ts","./src/app/errors/test-errors/test-errors.component.html","./src/app/footer/footer.component.ts","./src/app/footer/footer.component.html","./src/app/home/home.component.ts","./src/app/home/home.component.html","./src/app/nav/nav.component.ts","./src/app/nav/nav.component.html","./src/app/program/program.component.ts","./src/app/program/program.component.html","./src/app/registration/registration.component.ts","./src/app/registration/registration.component.html","./src/app/root/root.component.ts","./src/app/root/root.component.html","./src/app/users/users.component.ts","./src/app/users/users.component.html","./src/environments/environment.ts","./src/main.ts"],"sourcesContent":["// import { Injectable } from '@angular/core';\n// import { ActivatedRouteSnapshot, RouterStateSnapshot, UrlTree } from '@angular/router';\n// import { Observable } from 'rxjs';\n// import { AccountService } from '../_services/account.service';\n// import { ToastrService } from 'ngx-toastr';\n// import { map } from 'rxjs/operators';\n\n// @Injectable({\n//   providedIn: 'root'\n// })\n// export class AuthGuard  {\n//   constructor(private accountService: AccountService, private toastr: ToastrService) {}\n\n//   canActivate(): Observable<boolean> {\n//     return this.accountService.currentUser$.pipe(\n//       map(user => {\n//         if (user) return true;\n//         this.toastr.error('401')\n//       })\n//     )\n//   }\n  \n// }\n\nimport { Injectable, inject } from '@angular/core';\nimport { ActivatedRouteSnapshot, CanActivateChildFn, RouterStateSnapshot, UrlTree } from '@angular/router';\nimport { Observable } from 'rxjs';\nimport { AccountService } from '../_services/account.service';\nimport { ToastrService } from 'ngx-toastr';\nimport { map } from 'rxjs/operators';\n\nexport const authGuard: CanActivateChildFn = (route, state) =>{\n  const accountService = inject(AccountService);\n  const toastr = inject(ToastrService);\n\n  return accountService.currentUser$.pipe(\n    map(user => {\n      if (user) return true;\n      else{\n        toastr.error(\"401\");\n        return false\n      }\n    })\n  )\n};","import { Injectable } from '@angular/core';\nimport {\n  HttpRequest,\n  HttpHandler,\n  HttpEvent,\n  HttpInterceptor\n} from '@angular/common/http';\nimport { Observable, throwError } from 'rxjs';\nimport { Router, NavigationExtras } from '@angular/router';\nimport { ToastrService } from 'ngx-toastr';\nimport { catchError } from 'rxjs/operators';\n\n@Injectable()\nexport class ErrorInterceptor implements HttpInterceptor {\n\n  constructor(private router: Router, private toastr: ToastrService) {}\n\n  intercept(request: HttpRequest<unknown>, next: HttpHandler): Observable<HttpEvent<unknown>> {\n    return next.handle(request).pipe(\n      catchError(error => {\n        if (error) {\n          switch (error.status) {\n            case 400:\n              if (error.error.errors) {\n                const modalStateErrors = [];\n                for (const key in error.error.errors) {\n                  if (error.error.errors[key]) {\n                    modalStateErrors.push(error.error.errors[key])\n                  }\n                }\n                throw modalStateErrors.flat();\n              } else {\n                this.toastr.error(error.statusText, error.status);\n              }\n              break;\n            case 401:\n              this.toastr.error(error.statusText, error.status);\n              break;\n            case 404:\n              this.router.navigateByUrl('/not-found');\n              break;\n            case 500:\n              const navigationExtras: NavigationExtras = {state: {error: error.error}}\n              this.router.navigateByUrl('/server-error', navigationExtras);\n              break;\n            default:\n              this.toastr.error('Something unexpected went wrong');\n              console.log(error);\n              break;\n          }\n        }\n        return throwError(error);\n      })\n    )\n  }\n}\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { BsDropdownModule } from 'ngx-bootstrap/dropdown';\nimport { ToastrModule } from 'ngx-toastr';\n\n@NgModule({\n  declarations: [],\n  imports: [\n    CommonModule,\n    BsDropdownModule.forRoot(),\n    ToastrModule.forRoot({\n      positionClass: 'toast-bottom-right'\n    })\n  ],\n  exports: [\n    BsDropdownModule,\n    ToastrModule\n  ]\n})\nexport class SharedModule { }\n","import { Injectable } from '@angular/core';\nimport { HttpClient } from '@angular/common/http';\nimport { catchError, map } from 'rxjs/operators';\nimport { User } from '../_models/user';\nimport { LectureUser } from '../_models/lectureUser';\nimport { ReplaySubject, Observable, of, throwError } from 'rxjs';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class AccountService {\n  baseUrl = 'https://localhost:5001/api/';\n\n  private currentUserSource = new ReplaySubject<User>(1);\n  currentUser$ = this.currentUserSource.asObservable();\n\n  private registrationCompletedSource = new ReplaySubject<boolean>(1);\n  registrationCompleted$ = this.registrationCompletedSource.asObservable();\n\n  constructor(private http: HttpClient) { }\n\n  login(model: any): Observable<void> {\n    return this.http.post<User>(this.baseUrl + 'account/login', model).pipe(\n      map((response: User) => {\n        const user = response;\n        if (user) {\n          localStorage.setItem('user', JSON.stringify(user));\n          this.currentUserSource.next(user);\n        }\n      })\n    );\n  }\n\n  register(model: any): Observable<void> {\n    return this.http.post<LectureUser>(this.baseUrl + 'account/register', model).pipe(\n      map((user: LectureUser) => {\n        if (user) {\n          // localStorage.setItem('user', JSON.stringify(user));\n          this.registrationCompletedSource.next(true);\n        }\n      })\n    );\n  }\n\n  setCurrentUser(user: User) {\n    this.currentUserSource.next(user);\n  }\n\n  logout() {\n    localStorage.removeItem('user');\n    this.currentUserSource.next(null);\n  }\n\n  getUsers(): Observable<any[]> {\n    const user = JSON.parse(localStorage.getItem('user'));\n\n    if (user && user.token) {\n      const headers = {\n        'Authorization': `Bearer ${user.token}`\n      };\n\n      return this.http.get<any[]>(this.baseUrl + 'users', { headers: headers });\n    } else {\n      return of([]);\n    }\n  }\n\n  deleteUser(userToDelete: any): Observable<void> {\n    const currentUser = JSON.parse(localStorage.getItem('user'));\n\n    if (currentUser && currentUser.token) {\n      const headers = {\n        'Authorization': `Bearer ${currentUser.token}`\n      };\n\n      return this.http.post<void>(`${this.baseUrl}users/delete`, userToDelete, { headers: headers })\n    }\n}\n\n\n}\n","import { NgModule } from '@angular/core';\nimport { Routes, RouterModule } from '@angular/router';\nimport { HomeComponent } from './home/home.component';\nimport { TestErrorsComponent } from './errors/test-errors/test-errors.component';\nimport { NotFoundComponent } from './errors/not-found/not-found.component';\nimport { ServerErrorComponent } from './errors/server-error/server-error.component';\nimport { RegistrationComponent } from './registration/registration.component';\nimport { ProgramComponent } from './program/program.component';\nimport { ContactComponent } from './contact/contact.component';\nimport { RootComponent } from './root/root.component';\nimport { UsersComponent } from './users/users.component';\nimport { authGuard } from './_guards/auth.guard';\n\nconst routes: Routes = [\n  {path: '', component: HomeComponent},\n  { path: 'registration', component: RegistrationComponent },\n  { path: 'program', component: ProgramComponent },\n  { path: 'contact', component: ContactComponent },\n  { path: 'root', component: RootComponent },\n  {\n    path: '',\n    runGuardsAndResolvers: 'always',\n    canActivate: [authGuard],\n    children: [\n      { path: 'users', component: UsersComponent,canActivate: [authGuard] },\n    ]\n  },\n  {path: 'errors', component: TestErrorsComponent},\n  {path: 'not-found', component: NotFoundComponent},\n  {path: 'server-error', component: ServerErrorComponent},\n  {path: '**', component: NotFoundComponent, pathMatch: 'full'},\n];\n\n@NgModule({\n  imports: [RouterModule.forRoot(routes, {})],\n  exports: [RouterModule]\n})\nexport class AppRoutingModule { }\n","import { Component, OnInit } from '@angular/core';\nimport { HttpClient } from '@angular/common/http';\nimport { User } from './_models/user';\nimport { AccountService } from './_services/account.service';\n\n@Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.css']\n})\nexport class AppComponent implements OnInit {\n  title = 'NeuroMet';\n  users: any;\n\n  constructor(private accountService: AccountService) {}\n\n  ngOnInit() {\n    this.setCurrentUser();\n  }\n\n  setCurrentUser() {\n    const user: User = JSON.parse(localStorage.getItem('user'));\n    this.accountService.setCurrentUser(user);\n  }\n}\n","<section class=\"vh-100\" style=\"background-color: #249e90;\">\n    <app-nav></app-nav>\n    <div class=\"container gradient-custom-content\">\n        <router-outlet></router-outlet>\n    </div>\n</section>\n<app-footer></app-footer>\n","import { BrowserModule } from '@angular/platform-browser';\nimport { NgModule } from '@angular/core';\nimport { HttpClientModule, HTTP_INTERCEPTORS } from '@angular/common/http';\nimport { FormsModule } from '@angular/forms';\n\nimport { AppRoutingModule } from './app-routing.module';\nimport { AppComponent } from './app.component';\nimport { BrowserAnimationsModule } from '@angular/platform-browser/animations';\nimport { NavComponent } from './nav/nav.component';\nimport { HomeComponent } from './home/home.component';\nimport { SharedModule } from './_modules/shared.module';\nimport { TestErrorsComponent } from './errors/test-errors/test-errors.component';\nimport { ErrorInterceptor } from './_interceptors/error.interceptor';\nimport { NotFoundComponent } from './errors/not-found/not-found.component';\nimport { ServerErrorComponent } from './errors/server-error/server-error.component';\nimport { RegistrationComponent } from './registration/registration.component';\nimport { ProgramComponent } from './program/program.component';\nimport { ContactComponent } from './contact/contact.component';\nimport { RootComponent } from './root/root.component';\nimport { FooterComponent } from './footer/footer.component';\nimport { UsersComponent } from './users/users.component';\nimport { ReactiveFormsModule } from '@angular/forms';\n\n@NgModule({\n  declarations: [\n    AppComponent,\n    NavComponent,\n    HomeComponent,\n    TestErrorsComponent,\n    NotFoundComponent,\n    ServerErrorComponent,\n    RegistrationComponent,\n    ProgramComponent,\n    ContactComponent,\n    RootComponent,\n    FooterComponent,\n    UsersComponent\n  ],\n  imports: [\n    BrowserModule,\n    AppRoutingModule,\n    HttpClientModule,\n    BrowserAnimationsModule,\n    FormsModule,\n    SharedModule,\n    ReactiveFormsModule\n  ],\n  providers: [\n    {provide: HTTP_INTERCEPTORS, useClass: ErrorInterceptor, multi: true}\n  ],\n  bootstrap: [AppComponent]\n})\nexport class AppModule { }\n","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-contact',\n  templateUrl: './contact.component.html',\n  styleUrls: ['./contact.component.css']\n})\nexport class ContactComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit(): void {\n  }\n\n}\n","<div class=\"container-fluid\">\n  <div class=\"row justify-content-center align-items-center vh-100\">\n    <div class=\"col-12 col-lg-9 col-xl-7\">\n      <div class=\"card shadow-2-strong card-registration\" style=\"border-radius: 15px;\">\n        <div class=\"card-body p-4 p-md-5 text-center\">\n\n          <div class=\"contact-info\">\n            <h2 class=\"mb-4\">KONTAKT</h2>\n            <p>dr hab. inż. Krzysztof Regulski, prof. AGH</p>\n            <p>tel.: (0-12) 617 41 31</p>\n            <p>e-mail: <a href=\"mailto:regulski@agh.edu.pl\">regulski&#64;agh.edu.pl</a></p>\n          </div>\n\n          <hr class=\"my-4\">\n\n          <div class=\"contact-info\">\n            <p>dr inż. Łukasz Sztangret</p>\n            <p>tel.: (0-12) 617 41 83</p>\n            <p>e-mail: <a href=\"mailto:szt@agh.edu.pl\">szt&#64;agh.edu.pl</a></p>\n          </div>\n\n          <hr class=\"my-4\">\n\n          <div class=\"contact-info\">\n            <p>Akademia Górniczo-Hutnicza w Krakowie</p>\n            <p>Wydział Inżynierii Metali i Informatyki Przemysłowej</p>\n            <p>Katedra Informatyki Stosowanej i Modelowania</p>\n            <div class=\"contact-images\">\n              <img src=\"assets/isim.png\" alt=\"Description of Image 1\" class=\"contact-image\">\n              <img src=\"assets/aghLogo.png\" alt=\"Description of Image 2\" class=\"contact-image\">\n            </div>\n          </div>\n\n        </div>\n      </div>\n    </div>\n  </div>\n</div>\n","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-not-found',\n  templateUrl: './not-found.component.html',\n  styleUrls: ['./not-found.component.css']\n})\nexport class NotFoundComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit(): void {\n  }\n\n}\n","<div class=\"container\">\n    <h1>Not found</h1>\n    <button class=\"btn btn-info btn-lg\" routerLink='/'>Return to home page</button>\n</div>\n","import { Component, OnInit } from '@angular/core';\nimport { Router } from '@angular/router';\n\n@Component({\n  selector: 'app-server-error',\n  templateUrl: './server-error.component.html',\n  styleUrls: ['./server-error.component.css']\n})\nexport class ServerErrorComponent implements OnInit {\n  error: any;\n\n  constructor(private router: Router) {\n    const navigation = this.router.getCurrentNavigation();\n    this.error = navigation?.extras?.state?.error;\n   }\n\n  ngOnInit(): void {\n  }\n\n}\n","<h4>Internal server error - refreshing the page will make the error disappear!</h4>\n<ng-container *ngIf=\"error\">\n    <h5 class='text-danger'>Error: {{error.message}}</h5>\n    <p class=\"font-weight-bold\">Note: If you are seeing this then Angular is probably not to blame</p>\n    <p>What to do next?</p>\n    <ol>\n        <li>Open the chrome dev tools</li>\n        <li>Inspect the network tab</li>\n        <li>Check the failing request</li>\n        <li>Examine the request URL - make sure it is correct</li>\n        <li>Reproduce the error in Postman - if we see the same response, then the issue is not with Angular</li>\n    </ol>\n    <p>Following is the stack trace - this is where your investigation should start!</p>\n    <code class=\"mt-5\" style=\"background-color: whitesmoke;\">{{error.details}}</code>\n</ng-container>\n","import { Component, OnInit } from '@angular/core';\nimport { HttpClient } from '@angular/common/http';\n\n@Component({\n  selector: 'app-test-errors',\n  templateUrl: './test-errors.component.html',\n  styleUrls: ['./test-errors.component.css']\n})\nexport class TestErrorsComponent implements OnInit {\n  baseUrl = 'https://localhost:5001/api/';\n  validationErrors: string[] = [];\n\n  constructor(private http: HttpClient) { }\n\n  ngOnInit(): void {\n  }\n\n  get404Error() {\n    this.http.get(this.baseUrl + 'buggy/not-found').subscribe(response => {\n      console.log(response);\n    }, error => {\n      console.log(error);\n    })\n  }\n\n  get400Error() {\n    this.http.get(this.baseUrl + 'buggy/bad-request').subscribe(response => {\n      console.log(response);\n    }, error => {\n      console.log(error);\n    })\n  }\n\n  get500Error() {\n    this.http.get(this.baseUrl + 'buggy/server-error').subscribe(response => {\n      console.log(response);\n    }, error => {\n      console.log(error);\n    })\n  }\n\n  get401Error() {\n    this.http.get(this.baseUrl + 'buggy/auth').subscribe(response => {\n      console.log(response);\n    }, error => {\n      console.log(error);\n    })\n  }\n\n  get400ValidationError() {\n    this.http.post(this.baseUrl + 'account/register', {}).subscribe(response => {\n      console.log(response);\n    }, error => {\n      console.log(error);\n      this.validationErrors = error;\n    })\n  }\n\n}\n","<ng-container>\n    <button (click)=\"get500Error()\" class=\"btn btn-outline-primary mr-3\">Test 500 Error</button>\n    <button (click)=\"get400Error()\" class=\"btn btn-outline-primary mr-3\">Test 400 Error</button>\n    <button (click)=\"get401Error()\" class=\"btn btn-outline-primary mr-3\">Test 401 Error</button>\n    <button (click)=\"get404Error()\" class=\"btn btn-outline-primary mr-3\">Test 404 Error</button>\n    <button (click)=\"get400ValidationError()\" class=\"btn btn-outline-primary mr-3\">\n        Test 400 Validation Error</button>\n\n    <div class=\"row mt-5\" *ngIf=\"validationErrors.length > 0\">\n        <ul class=\"text-danger\">\n            <li *ngFor=\"let error of validationErrors\">\n                {{error}}\n            </li>\n        </ul>\n    </div>\n</ng-container>","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-footer',\n  templateUrl: './footer.component.html',\n  styleUrls: ['./footer.component.css']\n})\nexport class FooterComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit(): void {\n  }\n\n}\n","<footer>\n  <a href=\"http://www.isim.agh.edu.pl/\" target=\"_blank\">www.isim.agh.edu.pl</a>\n</footer>\n","import { Component, OnInit } from '@angular/core';\nimport { HttpClient } from '@angular/common/http';\n\n@Component({\n  selector: 'app-home',\n  templateUrl: './home.component.html',\n  styleUrls: ['./home.component.css']\n})\nexport class HomeComponent implements OnInit {\n  registerMode = false;\n\n  constructor() { }\n\n  ngOnInit(): void {\n  }\n\n  registerToggle() {\n    this.registerMode = !this.registerMode;\n  }\n\n  cancelRegisterMode(event: boolean) {\n    this.registerMode = event;\n  }\n\n}\n","<div class=\"container-fluid\">\n  <div class=\"row justify-content-center align-items-center vh-100\">\n    <div class=\"col-12 col-lg-9 col-xl-7\">\n      <div class=\"card shadow-2-strong card-registration\" style=\"border-radius: 15px;\">\n        <div class=\"card-body p-4 p-md-5 text-center\">\n\n          <h2 class=\"mb-4\">Seminarium na temat:</h2>\n\n          <p class=\"lead mb-4\">\n            \"ZASTOSOWANIE SZTUCZNEJ INTELIGENCJI W SYMULACJI I STEROWANIU PROCESAMI METALURGICZNYMI\"\n          </p>\n\n          <p class=\"mb-4\">\n            Odbyło się 18 kwietnia 2023 w Akademii Górniczo-Hutniczej im. Stanisława Staszica w Krakowie.\n          </p>\n\n          <p class=\"mb-4\">\n            Tegoroczne Seminarium NeuroMet było dwudziestym piątym z serii spotkań, których celem jest stworzenie platformy do wymiany doświadczeń\n            w zakresie zastosowania sztucznej inteligencji do symulacji i sterowania procesami metalurgicznymi.\n          </p>\n\n          <p class=\"mb-4\">\n            Zachęcamy do zgłoszeń w przyszłym roku w tematyce uczenia maszynowego, Industry 4.0, analizy danych i optymalizacji. Zapraszamy do\n            prezentacji wyników badań, wyników prac badawczych i wdrożeniowych oraz tematyk badawczych doktoratów. Udział w seminarium jest bezpłatny.\n          </p>\n\n          <p class=\"mb-4\">\n            Zapraszamy!\n          </p>\n\n          <div class=\"text-left mb-4\">\n            <strong>ORGANIZATOR SEMINARIUM</strong>\n            <br>\n            Katedra Informatyki Stosowanej i Modelowania\n            <br>\n            Przewodniczący Komitetu Organizacyjnego\n            <br>\n            dr hab. inż. Krzysztof Regulski, prof. AGH\n          </div>\n\n      </div>\n    </div>\n  </div>\n</div>\n\n<app-footer></app-footer>\n\n","import { Component, OnInit } from '@angular/core';\nimport { AccountService } from '../_services/account.service';\nimport { Observable } from 'rxjs';\nimport { User } from '../_models/user';\nimport { Router } from '@angular/router';\nimport { ToastrService } from 'ngx-toastr';\n\n@Component({\n  selector: 'app-nav',\n  templateUrl: './nav.component.html',\n  styleUrls: ['./nav.component.css']\n})\nexport class NavComponent implements OnInit {\n  model: any = {}\n\n  constructor(public accountService: AccountService, private router: Router, \n    private toastr: ToastrService) { }\n\n  ngOnInit(): void {\n  }\n\n  login() {\n    this.accountService.login(this.model).subscribe(response => {\n      this.router.navigateByUrl('/members');\n    })\n  }\n\n  logout() {\n    this.accountService.logout();\n    this.router.navigateByUrl('/')\n  }\n  \n}\n","<nav class=\"navbar navbar-expand-md navbar-dark fixed-top\" style=\"background-color: #222a3f;\">\n\n  <div class=\"container\">\n    <img src=\"assets/neurometlogo.ico\" alt=\"NeuroMet Logo\" width=\"60\" height=\"60\" class=\"d-inline-block align-top mr-2\">\n      <a class=\"navbar-brand\" routerLink='/'>\n        NeuroMet\n      </a>\n\n        <ul class=\"navbar-nav mr-auto\">\n            <ng-container *ngIf=\"accountService.currentUser$ | async; else anonymousUser\">\n              <li class=\"nav-item\">\n                <a class=\"nav-link\" routerLink='/users' routerLinkActive='active'>Users</a>\n              </li>\n              <li class=\"nav-item\">\n                <a class=\"nav-link\" routerLink='/generateProgram' routerLinkActive='active'>Generate Program</a>\n              </li>\n            </ng-container>\n          \n            <ng-template #anonymousUser>\n              <li class=\"nav-item\">\n                <a class=\"nav-link\" routerLink='/registration' routerLinkActive='active'>Registration</a>\n              </li>\n              <li class=\"nav-item\">\n                <a class=\"nav-link\" routerLink='/program' routerLinkActive='active'>Program</a>\n              </li>\n              <li class=\"nav-item\">\n                <a class=\"nav-link\" routerLink='/contact' routerLinkActive='active'>Contact</a>\n              </li>\n            </ng-template>\n          </ul>\n\n        <div class=\"dropdown\" *ngIf=\"(accountService.currentUser$ | async) as user\" dropdown>\n            <a class=\"dropdown-toggle text-light\" dropdownToggle>Welcome {{user.username | titlecase}}</a>\n            <div class=\"dropdown-menu mt-3\" *dropdownMenu>\n                <a class=\"dropdown-item\">Edit Profile</a>\n                <div class=\"dropdown-divider\"></div>\n                <a class=\"dropdown-item\" (click)=\"logout()\" >Logout</a>\n            </div>\n        </div>\n    </div>\n</nav>\n","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-program',\n  templateUrl: './program.component.html',\n  styleUrls: ['./program.component.css']\n})\nexport class ProgramComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit(): void {\n  }\n\n}\n","<div class=\"container-fluid\">\n  <div class=\"row justify-content-center align-items-center vh-100\">\n    <div class=\"col-12 col-lg-9 col-xl-7\">\n      <div class=\"card shadow-2-strong card-registration\" style=\"border-radius: 15px;\">\n        <div class=\"card-body p-4 p-md-5 text-center\">\n          The event program will be uploaded soon\n        </div>\n      </div>\n    </div>\n  </div>\n</div>\n","import { Component, OnInit, Output, EventEmitter } from '@angular/core';\nimport { AccountService } from '../_services/account.service';\nimport { ToastrService } from 'ngx-toastr';\nimport { UntypedFormBuilder, UntypedFormGroup, Validators } from '@angular/forms';\n\n@Component({\n  selector: 'app-registration',\n  templateUrl: './registration.component.html',\n  styleUrls: ['./registration.component.css']\n})\nexport class RegistrationComponent implements OnInit {\n  @Output() cancelRegister = new EventEmitter();\n  model: any = {};\n  registrationCompleted = false;\n  registerForm: UntypedFormGroup; \n  presentationCheckboxChecked = false;;\n\n  constructor(\n    private accountService: AccountService, \n    private toastr: ToastrService,\n    private formBuilder: UntypedFormBuilder \n  ) { \n    this.accountService.registrationCompleted$.subscribe((completed) => {\n      this.registrationCompleted = completed;\n    });\n    this.registrationCompleted = false;\n  }\n\n  ngOnInit(): void {\n    this.initForm();\n\n  }\n\n  initForm() {\n    this.registerForm = this.formBuilder.group({\n      firstName: ['', [Validators.required, Validators.minLength(2), Validators.maxLength(50)]],\n      secondName: ['', [Validators.required, Validators.minLength(2), Validators.maxLength(50)]],\n      emailAddress: ['', [Validators.required, Validators.email]],\n      university: ['', [Validators.required]],\n      presentation: [{value: '', disabled: true}, [Validators.minLength(2), Validators.maxLength(100)]] \n    });\n  }\n  \n\n  register() {\n    if (this.registerForm.valid) {\n      this.accountService.register(this.registerForm.value).subscribe(response => {\n        console.log(response);\n        this.cancel();\n      }, error => {\n        console.log(error);\n        this.toastr.error(error.error);\n      });\n    } else {\n      this.toastr.error('Form is not valid!');\n    }\n  }\n\n  cancel() {\n    this.cancelRegister.emit(false);\n  }\n\n  togglePresentationField() {\n    this.presentationCheckboxChecked = !this.presentationCheckboxChecked;\n    if (this.presentationCheckboxChecked) {\n      this.registerForm.get('presentation').enable();\n    } else {\n      this.registerForm.get('presentation').disable();\n    }\n  }\n\n  \n}\n\n","<div class=\"container-fluid\">\n  <div class=\"row justify-content-center align-items-center vh-100\">\n    <div class=\"col-12 col-lg-9 col-xl-7\">\n      <div class=\"card shadow-2-strong card-registration\" style=\"border-radius: 15px;\">\n        <div class=\"card-body p-4 p-md-5 text-center\">\n\n          <form *ngIf=\"!registrationCompleted\" [formGroup]=\"registerForm\" (ngSubmit)=\"register()\" autocomplete=\"off\">\n            <h2 class=\"text-center\">Sign up</h2>\n            <hr>\n              \n            <div class=\"form-group\">\n              <input type=\"text\" class=\"form-control\" formControlName=\"firstName\" placeholder=\"First Name\">\n              <small *ngIf=\"registerForm.controls.firstName.touched && registerForm.controls.firstName.errors\" class=\"text-danger\">\n                <div *ngIf=\"registerForm.controls.firstName.errors.required\">First name is required.</div>\n                <div *ngIf=\"registerForm.controls.firstName.errors.minlength\">First name must be at least 2 characters long.</div>\n                <div *ngIf=\"registerForm.controls.firstName.errors.maxlength\">First name cannot be more than 50 characters long.</div>\n              </small>\n            </div>\n\n            <div class=\"form-group\">\n              <input type=\"text\" class=\"form-control\" formControlName=\"secondName\" placeholder=\"Last Name\">\n              <small *ngIf=\"registerForm.controls.secondName.touched && registerForm.controls.secondName.errors\" class=\"text-danger\">\n                <div *ngIf=\"registerForm.controls.secondName.errors.required\">Last name is required.</div>\n                <div *ngIf=\"registerForm.controls.secondName.errors.minlength\">Last name must be at least 2 characters long.</div>\n                <div *ngIf=\"registerForm.controls.secondName.errors.maxlength\">Last name cannot be more than 50 characters long.</div>\n              </small>\n            </div>\n            \n              <div class=\"form-group\">\n                <input type=\"email\" class=\"form-control\" formControlName=\"emailAddress\" placeholder=\"Email Address\">\n                <small *ngIf=\"registerForm.controls.emailAddress.touched && registerForm.controls.emailAddress.errors\" class=\"text-danger\">\n                  <div *ngIf=\"registerForm.controls.emailAddress.errors.required\">Email is required.</div>\n                  <div *ngIf=\"registerForm.controls.emailAddress.errors.email\">Please enter a valid email address.</div>\n                </small>\n              </div>\n            \n              <div class=\"form-group\">\n                <input type=\"text\" class=\"form-control\" formControlName=\"university\" placeholder=\"University\">\n                <small *ngIf=\"registerForm.controls.university.touched && registerForm.controls.university.errors\" class=\"text-danger\">\n                  <div *ngIf=\"registerForm.controls.university.errors.required\">University is required.</div>\n                  <div *ngIf=\"registerForm.controls.university.errors.minlength\">University must be at least 2 characters long.</div>\n                  <div *ngIf=\"registerForm.controls.university.errors.maxlength\">University cannot be more than 50 characters long.</div>\n                </small>\n              </div>\n\n              <div class=\"form-group\">\n                <div class=\"form-check\">\n                  <input type=\"checkbox\" class=\"form-check-input\" id=\"presentationCheckbox\" (change)=\"togglePresentationField()\">\n                  <label class=\"form-check-label\" for=\"presentationCheckbox\">Presentation</label>\n                </div>\n              </div>\n              \n              <div class=\"form-group\">\n                <input type=\"text\" class=\"form-control\" formControlName=\"presentation\" placeholder=\"Presentation Title\">\n                <small *ngIf=\"registerForm.controls.presentation.touched && registerForm.controls.presentation.errors\" class=\"text-danger\">\n                  <div *ngIf=\"registerForm.controls.presentation.errors.required\">Presentation Title is required.</div>\n                  <div *ngIf=\"registerForm.controls.presentation.errors.minlength\">Presentation Title must be at least 2 characters long.</div>\n                  <div *ngIf=\"registerForm.controls.presentation.errors.maxlength\">Presentation Title cannot be more than 100 characters long.</div>\n                </small>\n              </div>\n              \n\n            \n              <div class=\"form-group text-center\">\n                <button class=\"btn btn-success mr-2\" type=\"submit\" [disabled]=\"registerForm.invalid\">Register</button>\n                <button class=\"btn btn-default mr-2\" (click)=\"cancel()\" type=\"button\">Cancel</button>\n              </div>\n            </form>\n            \n\n\n\n            <div *ngIf=\"registrationCompleted\" class=\"alert alert-success mt-3\">\n              Registration Completed!\n            </div>\n\n        </div>\n      </div>\n    </div>\n</div>\n","import { Component, OnInit } from '@angular/core';\nimport { AccountService } from '../_services/account.service';\nimport { Observable } from 'rxjs';\nimport { User } from '../_models/user';\nimport { Router } from '@angular/router';\nimport { ToastrService } from 'ngx-toastr';\n\n@Component({\n  selector: 'app-root',\n  templateUrl: './root.component.html',\n  styleUrls: ['./root.component.css']\n})\nexport class RootComponent implements OnInit {\n  model: any = {}\n\n  constructor(public accountService: AccountService, private router: Router, \n    private toastr: ToastrService) { }\n\n  ngOnInit(): void {\n  }\n\n  login() {\n    this.accountService.login(this.model).subscribe(response => {\n      this.router.navigateByUrl('/users');\n    })\n  }\n\n  logout() {\n    this.accountService.logout();\n    this.router.navigateByUrl('/')\n  }\n\n}\n","<div class=\"container-fluid\">\n  <div class=\"row justify-content-center align-items-center vh-100\">\n    <div class=\"col-12 col-lg-9 col-xl-7\">\n      <div class=\"card shadow-2-strong card-registration\" style=\"border-radius: 15px;\">\n        <div class=\"card-body p-4 p-md-5 text-center\">\n  \n            <form #loginForm=\"ngForm\" class=\"form-signin\" (ngSubmit)=\"login()\" autocomplete=\"off\">\n              <h1 class=\"h3 mb-3 font-weight-normal\">Login</h1>\n  \n              <label for=\"inputUsername\" class=\"sr-only\">Username</label>\n              <input\n                name=\"username\"\n                [(ngModel)]=\"model.username\"\n                class=\"form-control mb-3\"\n                type=\"text\"\n                id=\"inputUsername\"\n                placeholder=\"Username\"\n                required\n                autofocus\n              >\n  \n              <label for=\"inputPassword\" class=\"sr-only\">Password</label>\n              <input\n                name=\"password\"\n                [(ngModel)]=\"model.password\"\n                class=\"form-control mb-3\"\n                type=\"password\"\n                id=\"inputPassword\"\n                placeholder=\"Password\"\n                required\n              >\n  \n              <button class=\"btn btn-lg btn-success btn-block\" type=\"submit\">Login</button>\n            </form>\n            \n          </div>\n        </div>\n      </div>\n    </div>\n  </div>\n  ","import { Component, OnInit } from '@angular/core';\nimport { HttpClient } from '@angular/common/http';\nimport { AccountService } from '../_services/account.service';\nimport { ToastrService } from 'ngx-toastr';\nimport { UntypedFormBuilder, UntypedFormGroup, Validators } from '@angular/forms';\ndeclare var $: any;\n\n@Component({\n  selector: 'app-users',\n  templateUrl: './users.component.html',\n  styleUrls: ['./users.component.css']\n})\nexport class UsersComponent implements OnInit {\n  users: any[] = [];\n  baseUrl = 'https://localhost:5001/api/';\n  confirmDeleteUser: any = null; \n  registerForm: UntypedFormGroup;\n  showPresentationField = false; \n  newUser: { firstName: string; secondName: string; emailAddress: string; university: string; };\n\n  constructor(\n    private httpClient: HttpClient, \n    public accountService: AccountService,\n    private toastr: ToastrService,\n    private formBuilder: UntypedFormBuilder,\n  ) {}\n  ngOnInit() {\n    this.initForm();\n    this.loadUsers();\n    this.newUser = { firstName: '', secondName: '', emailAddress: '', university: '' };\n  }\n  \n  initForm() {\n    this.registerForm = this.formBuilder.group({\n      firstName: ['', [Validators.required, Validators.minLength(2), Validators.maxLength(50)]],\n      secondName: ['', [Validators.required, Validators.minLength(2), Validators.maxLength(50)]],\n      emailAddress: ['', [Validators.required, Validators.email]],\n      university: ['', [Validators.required]],\n      presentation: [{value: '', disabled: true}, [Validators.minLength(2), Validators.maxLength(100)]] \n    });\n  }\n\n  togglePresentationField() {\n    this.showPresentationField = !this.showPresentationField;\n    if (this.showPresentationField) {\n      this.registerForm.get('presentation').enable();\n    } else {\n      this.registerForm.get('presentation').disable();\n    }\n  }\n\n  loadUsers() {\n    this.accountService.getUsers().subscribe(\n      (users: any[]) => {\n        this.users = users;\n      },\n      (error) => {\n        console.error('Error fetching users:', error);\n      }\n    );\n  }\n\n  registerUser() {\n    if (this.registerForm.valid) {\n      this.accountService.register(this.registerForm.value).subscribe(\n        (response: any) => {\n          this.users.push(response); // Add the new user to the local array\n          this.registerForm.reset(); // Reset the form\n          this.toastr.success('User added successfully');\n          this.loadUsers();\n          $('#addUserModal').modal('hide');\n        },\n        (error) => {\n          console.error('Error adding user:', error);\n          this.toastr.error('Failed to add user');\n        }\n      );\n    } else {\n      this.toastr.error('Form is not valid!');\n    }\n  }\n\n  deleteUser(user: any) {\n    if (confirm('Are you sure you want to delete this user?')) {\n      this.accountService.deleteUser(user).subscribe(\n        () => {\n          this.users = this.users.filter(u => u !== user); // Update the local users array\n          this.toastr.success('User deleted successfully');\n        },\n        (error) => {\n          console.error('Error deleting user:', error);\n          this.toastr.error('Failed to delete user');\n        }\n      );\n    }\n  }\n\n  // Function to sort users (you can customize the sorting logic)\n  sortUsers() {\n    this.users.sort((a, b) => a.firstName.localeCompare(b.firstName)); // Sort by first name as an example\n  }\n}\n","<div class=\"container-fluid\">\n  <div class=\"row justify-content-center align-items-center vh-100\">\n    <div class=\"col-20 col-lg-20 col-xl-20\">\n      <div class=\"card shadow-2-strong card-registration\" style=\"border-radius: 15px;\">\n        <div class=\"card-body p-3 p-md-3 text-center\">\n          <div class=\"users-container\" style=\"max-height: 600px; max-width: 1000px; overflow-y: auto;\">\n            <table class=\"table table-striped\">\n              <thead>\n                <tr>\n                  <th>Name</th>\n                  <th>Second Name</th>\n                  <th>Email</th>\n                  <th>University</th>\n                  <th>Actions</th>\n                </tr>\n              </thead>\n              <tbody>\n                <tr *ngFor=\"let user of users\">\n                  <td>{{ user.firstName }}</td>\n                  <td>{{ user.secondName }}</td>\n                  <td>{{ user.emailAddress }}</td>\n                  <td>{{ user.university }}</td>\n                  <td>\n                    <button class=\"btn btn-danger btn-sm\" (click)=\"deleteUser(user)\">Delete</button>\n                  </td>\n                </tr>\n              </tbody>\n            </table>\n          </div>\n\n          <!-- Button to trigger modal -->\n          <button type=\"button\" class=\"btn btn-primary mb-3\" data-toggle=\"modal\" data-target=\"#addUserModal\">\n            Add User\n          </button>\n\n          <!-- Modal Structure -->\n          <div class=\"modal fade\" id=\"addUserModal\" tabindex=\"-1\" role=\"dialog\" aria-labelledby=\"addUserModalLabel\" aria-hidden=\"true\">\n            <div class=\"modal-dialog modal-dialog-centered\" role=\"document\">\n              <div class=\"modal-content\">\n                <div class=\"modal-header\">\n                  <h5 class=\"modal-title\" id=\"addUserModalLabel\">Add New User</h5>\n                  <button type=\"button\" class=\"close\" data-dismiss=\"modal\" aria-label=\"Close\">\n                    <span aria-hidden=\"true\">&times;</span>\n                  </button>\n                </div>\n                <form [formGroup]=\"registerForm\" (ngSubmit)=\"registerUser()\" autocomplete=\"off\">\n                  <div class=\"modal-body\">\n                    <!-- Registration Form Fields -->\n                    \n                    \n                    \n                    \n                    <div class=\"form-group\">\n                      <input type=\"text\" class=\"form-control\" formControlName=\"firstName\" placeholder=\"First Name\">\n                      <small *ngIf=\"registerForm.controls.firstName.touched && registerForm.controls.firstName.errors\" class=\"text-danger\">\n                        <div *ngIf=\"registerForm.controls.firstName.errors.required\">First name is required.</div>\n                        <div *ngIf=\"registerForm.controls.firstName.errors.minlength\">First name must be at least 2 characters long.</div>\n                        <div *ngIf=\"registerForm.controls.firstName.errors.maxlength\">First name cannot be more than 50 characters long.</div>\n                      </small>\n                    </div>\n        \n                    <div class=\"form-group\">\n                      <input type=\"text\" class=\"form-control\" formControlName=\"secondName\" placeholder=\"Last Name\">\n                      <small *ngIf=\"registerForm.controls.secondName.touched && registerForm.controls.secondName.errors\" class=\"text-danger\">\n                        <div *ngIf=\"registerForm.controls.secondName.errors.required\">Last name is required.</div>\n                        <div *ngIf=\"registerForm.controls.secondName.errors.minlength\">Last name must be at least 2 characters long.</div>\n                        <div *ngIf=\"registerForm.controls.secondName.errors.maxlength\">Last name cannot be more than 50 characters long.</div>\n                      </small>\n                    </div>\n                    \n                      <div class=\"form-group\">\n                        <input type=\"email\" class=\"form-control\" formControlName=\"emailAddress\" placeholder=\"Email Address\">\n                        <small *ngIf=\"registerForm.controls.emailAddress.touched && registerForm.controls.emailAddress.errors\" class=\"text-danger\">\n                          <div *ngIf=\"registerForm.controls.emailAddress.errors.required\">Email is required.</div>\n                          <div *ngIf=\"registerForm.controls.emailAddress.errors.email\">Please enter a valid email address.</div>\n                        </small>\n                      </div>\n                    \n                      <div class=\"form-group\">\n                        <input type=\"text\" class=\"form-control\" formControlName=\"university\" placeholder=\"University\">\n                        <small *ngIf=\"registerForm.controls.university.touched && registerForm.controls.university.errors\" class=\"text-danger\">\n                          <div *ngIf=\"registerForm.controls.university.errors.required\">University is required.</div>\n                          <div *ngIf=\"registerForm.controls.university.errors.minlength\">University must be at least 2 characters long.</div>\n                          <div *ngIf=\"registerForm.controls.university.errors.maxlength\">University cannot be more than 50 characters long.</div>\n                        </small>\n                      </div>\n                      <!-- ... other template code ... -->\n\n                      <div class=\"form-group\">\n                        <div class=\"form-check\">\n                          <input type=\"checkbox\" class=\"form-check-input\" id=\"presentationCheckbox\" (change)=\"togglePresentationField()\">\n                          <label class=\"form-check-label\" for=\"presentationCheckbox\">Presentation</label>\n                        </div>\n                      </div>\n\n                      <div class=\"form-group\">\n                        <input type=\"text\" class=\"form-control\" formControlName=\"presentation\" placeholder=\"Presentation Title\">\n                        <small *ngIf=\"registerForm.controls.presentation.touched && registerForm.controls.presentation.errors\" class=\"text-danger\">\n                          <div *ngIf=\"registerForm.controls.presentation.errors.required\">Presentation Title is required.</div>\n                          <div *ngIf=\"registerForm.controls.presentation.errors.minlength\">Presentation Title must be at least 2 characters long.</div>\n                          <div *ngIf=\"registerForm.controls.presentation.errors.maxlength\">Presentation Title cannot be more than 100 characters long.</div>\n                        </small>\n                      </div>\n\n                      <!-- ... other template code ... -->\n\n\n\n\n\n\n\n\n                    <!-- ... other input fields ... -->\n                  </div>\n                  <div class=\"modal-footer\">\n                    <button type=\"button\" class=\"btn btn-secondary\" data-dismiss=\"modal\">Close</button>\n                    <button class=\"btn btn-success\" type=\"submit\" [disabled]=\"registerForm.invalid\">Register</button>\n                  </div>\n                </form>\n              </div>\n            </div>\n          </div> <!-- Closing tag for the modal structure -->\n\n        </div> <!-- Closing tag for 'card-body p-3 p-md-3 text-center' -->\n      </div> <!-- Closing tag for 'card shadow-2-strong card-registration' -->\n    </div> <!-- Closing tag for 'col-20 col-lg-20 col-xl-20' -->\n  </div> <!-- Closing tag for 'row justify-content-center align-items-center vh-100' -->\n</div> <!-- Closing tag for 'container-fluid' -->\n","// This file can be replaced during build by using the `fileReplacements` array.\n// `ng build --prod` replaces `environment.ts` with `environment.prod.ts`.\n// The list of file replacements can be found in `angular.json`.\n\nexport const environment = {\n  production: false\n};\n\n/*\n * For easier debugging in development mode, you can import the following file\n * to ignore zone related error stack frames such as `zone.run`, `zoneDelegate.invokeTask`.\n *\n * This import should be commented out in production mode because it will have a negative impact\n * on performance if an error is thrown.\n */\n// import 'zone.js/plugins/zone-error';  // Included with Angular CLI.\n","import { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app/app.module';\nimport { environment } from './environments/environment';\n\nif (environment.production) {\n  enableProdMode();\n}\n\nplatformBrowserDynamic().bootstrapModule(AppModule)\n  .catch(err => console.error(err));\n"],"names":["inject","AccountService","ToastrService","map","authGuard","route","state","accountService","toastr","currentUser$","pipe","user","error","throwError","catchError","ErrorInterceptor","constructor","router","intercept","request","next","handle","status","errors","modalStateErrors","key","push","flat","statusText","navigateByUrl","navigationExtras","console","log","_","i0","ɵɵinject","i1","Router","i2","_2","factory","ɵfac","CommonModule","BsDropdownModule","ToastrModule","SharedModule","_3","forRoot","positionClass","imports","exports","ReplaySubject","of","http","baseUrl","currentUserSource","asObservable","registrationCompletedSource","registrationCompleted$","login","model","post","response","localStorage","setItem","JSON","stringify","register","setCurrentUser","logout","removeItem","getUsers","parse","getItem","token","headers","get","deleteUser","userToDelete","currentUser","HttpClient","providedIn","RouterModule","HomeComponent","TestErrorsComponent","NotFoundComponent","ServerErrorComponent","RegistrationComponent","ProgramComponent","ContactComponent","RootComponent","UsersComponent","routes","path","component","runGuardsAndResolvers","canActivate","children","pathMatch","AppRoutingModule","AppComponent","title","ngOnInit","ɵɵdirectiveInject","selectors","decls","vars","consts","template","AppComponent_Template","rf","ctx","ɵɵelementStart","ɵɵelement","ɵɵelementEnd","BrowserModule","HttpClientModule","HTTP_INTERCEPTORS","FormsModule","BrowserAnimationsModule","NavComponent","FooterComponent","ReactiveFormsModule","AppModule","bootstrap","provide","useClass","multi","declarations","ContactComponent_Template","ɵɵtext","NotFoundComponent_Template","ɵɵelementContainerStart","ɵɵelementContainerEnd","ɵɵadvance","ɵɵtextInterpolate1","ctx_r0","message","ɵɵtextInterpolate","details","navigation","getCurrentNavigation","extras","ServerErrorComponent_Template","ɵɵtemplate","ServerErrorComponent_ng_container_2_Template","ɵɵproperty","error_r2","TestErrorsComponent_div_11_li_2_Template","validationErrors","get404Error","subscribe","get400Error","get500Error","get401Error","get400ValidationError","TestErrorsComponent_Template","ɵɵlistener","TestErrorsComponent_Template_button_click_1_listener","TestErrorsComponent_Template_button_click_3_listener","TestErrorsComponent_Template_button_click_5_listener","TestErrorsComponent_Template_button_click_7_listener","TestErrorsComponent_Template_button_click_9_listener","TestErrorsComponent_div_11_Template","length","FooterComponent_Template","registerMode","registerToggle","cancelRegisterMode","event","HomeComponent_Template","NavComponent_div_10_div_4_Template_a_click_4_listener","ɵɵrestoreView","_r7","ctx_r6","ɵɵnextContext","ɵɵresetView","NavComponent_div_10_div_4_Template","ɵɵpipeBind1","user_r4","username","i3","NavComponent_Template","NavComponent_ng_container_6_Template","NavComponent_ng_template_8_Template","ɵɵtemplateRefExtractor","NavComponent_div_10_Template","_r2","ProgramComponent_Template","EventEmitter","Validators","RegistrationComponent_form_5_small_6_div_1_Template","RegistrationComponent_form_5_small_6_div_2_Template","RegistrationComponent_form_5_small_6_div_3_Template","ctx_r2","registerForm","controls","firstName","required","minlength","maxlength","RegistrationComponent_form_5_small_9_div_1_Template","RegistrationComponent_form_5_small_9_div_2_Template","RegistrationComponent_form_5_small_9_div_3_Template","ctx_r3","secondName","RegistrationComponent_form_5_small_12_div_1_Template","RegistrationComponent_form_5_small_12_div_2_Template","ctx_r4","emailAddress","email","RegistrationComponent_form_5_small_15_div_1_Template","RegistrationComponent_form_5_small_15_div_2_Template","RegistrationComponent_form_5_small_15_div_3_Template","ctx_r5","university","RegistrationComponent_form_5_small_23_div_1_Template","RegistrationComponent_form_5_small_23_div_2_Template","RegistrationComponent_form_5_small_23_div_3_Template","presentation","RegistrationComponent_form_5_Template_form_ngSubmit_0_listener","_r22","ctx_r21","RegistrationComponent_form_5_small_6_Template","RegistrationComponent_form_5_small_9_Template","RegistrationComponent_form_5_small_12_Template","RegistrationComponent_form_5_small_15_Template","RegistrationComponent_form_5_Template_input_change_18_listener","ctx_r23","togglePresentationField","RegistrationComponent_form_5_small_23_Template","RegistrationComponent_form_5_Template_button_click_27_listener","ctx_r24","cancel","touched","invalid","formBuilder","cancelRegister","registrationCompleted","presentationCheckboxChecked","completed","initForm","group","minLength","maxLength","value","disabled","valid","emit","enable","disable","UntypedFormBuilder","outputs","RegistrationComponent_Template","RegistrationComponent_form_5_Template","RegistrationComponent_div_6_Template","RootComponent_Template","RootComponent_Template_form_ngSubmit_5_listener","RootComponent_Template_input_ngModelChange_11_listener","$event","RootComponent_Template_input_ngModelChange_14_listener","password","UsersComponent_tr_20_Template_button_click_10_listener","restoredCtx","_r8","user_r6","$implicit","ctx_r7","UsersComponent_small_36_div_1_Template","UsersComponent_small_36_div_2_Template","UsersComponent_small_36_div_3_Template","ctx_r1","UsersComponent_small_39_div_1_Template","UsersComponent_small_39_div_2_Template","UsersComponent_small_39_div_3_Template","UsersComponent_small_42_div_1_Template","UsersComponent_small_42_div_2_Template","UsersComponent_small_45_div_1_Template","UsersComponent_small_45_div_2_Template","UsersComponent_small_45_div_3_Template","UsersComponent_small_53_div_1_Template","UsersComponent_small_53_div_2_Template","UsersComponent_small_53_div_3_Template","httpClient","users","confirmDeleteUser","showPresentationField","loadUsers","newUser","registerUser","reset","success","$","modal","confirm","filter","u","sortUsers","sort","a","b","localeCompare","i4","UsersComponent_Template","UsersComponent_tr_20_Template","UsersComponent_Template_form_ngSubmit_32_listener","UsersComponent_small_36_Template","UsersComponent_small_39_Template","UsersComponent_small_42_Template","UsersComponent_small_45_Template","UsersComponent_Template_input_change_48_listener","UsersComponent_small_53_Template","environment","production","enableProdMode","__NgCli_bootstrap_1","platformBrowser","bootstrapModule","catch","err"],"sourceRoot":"webpack:///","x_google_ignoreList":[]}