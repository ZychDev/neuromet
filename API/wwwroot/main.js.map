{"version":3,"file":"main.js","mappings":"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","sources":["./src/app/_guards/auth.guard.ts","./src/app/_interceptors/error.interceptor.ts","./src/app/_modules/shared.module.ts","./src/app/_services/account.service.ts","./src/app/_services/pdf-display.service.ts","./src/app/app-routing.module.ts","./src/app/app.component.ts","./src/app/app.component.html","./src/app/app.module.ts","./src/app/contact/contact.component.ts","./src/app/contact/contact.component.html","./src/app/errors/not-found/not-found.component.ts","./src/app/errors/not-found/not-found.component.html","./src/app/errors/server-error/server-error.component.ts","./src/app/errors/server-error/server-error.component.html","./src/app/errors/test-errors/test-errors.component.ts","./src/app/errors/test-errors/test-errors.component.html","./src/app/footer/footer.component.ts","./src/app/footer/footer.component.html","./src/app/generate-program/generate-program.component.ts","./src/app/generate-program/generate-program.component.html","./src/app/home/home.component.ts","./src/app/home/home.component.html","./src/app/nav/nav.component.ts","./src/app/nav/nav.component.html","./src/app/program/program.component.ts","./src/app/program/program.component.html","./src/app/registration/registration.component.ts","./src/app/registration/registration.component.html","./src/app/root/root.component.ts","./src/app/root/root.component.html","./src/app/users/users.component.ts","./src/app/users/users.component.html","./src/environments/environment.ts","./src/main.ts"],"sourcesContent":["import { Injectable, inject } from '@angular/core';\nimport { ActivatedRouteSnapshot, CanActivateChildFn, RouterStateSnapshot, UrlTree } from '@angular/router';\nimport { Observable } from 'rxjs';\nimport { AccountService } from '../_services/account.service';\nimport { ToastrService } from 'ngx-toastr';\nimport { map } from 'rxjs/operators';\n\nexport const authGuard: CanActivateChildFn = (route, state) =>{\n  const accountService = inject(AccountService);\n  const toastr = inject(ToastrService);\n\n  return accountService.currentUser$.pipe(\n    map(user => {\n      if (user) return true;\n      else{\n        toastr.error(\"401\");\n        return false\n      }\n    })\n  )\n};","import { Injectable } from '@angular/core';\nimport {\n  HttpRequest,\n  HttpHandler,\n  HttpEvent,\n  HttpInterceptor\n} from '@angular/common/http';\nimport { Observable, throwError } from 'rxjs';\nimport { Router, NavigationExtras } from '@angular/router';\nimport { ToastrService } from 'ngx-toastr';\nimport { catchError } from 'rxjs/operators';\n\n@Injectable()\nexport class ErrorInterceptor implements HttpInterceptor {\n\n  constructor(private router: Router, private toastr: ToastrService) {}\n\n  intercept(request: HttpRequest<unknown>, next: HttpHandler): Observable<HttpEvent<unknown>> {\n    return next.handle(request).pipe(\n      catchError(error => {\n        if (error) {\n          switch (error.status) {\n            case 400:\n              if (error.error.errors) {\n                const modalStateErrors = [];\n                for (const key in error.error.errors) {\n                  if (error.error.errors[key]) {\n                    modalStateErrors.push(error.error.errors[key])\n                  }\n                }\n                throw modalStateErrors.flat();\n              } else {\n                this.toastr.error(error.statusText, error.status);\n              }\n              break;\n            case 401:\n              this.toastr.error(error.statusText, error.status);\n              break;\n            case 404:\n              this.router.navigateByUrl('/not-found');\n              break;\n            case 500:\n              const navigationExtras: NavigationExtras = {state: {error: error.error}}\n              this.router.navigateByUrl('/server-error', navigationExtras);\n              break;\n            default:\n              this.toastr.error('Something unexpected went wrong');\n              console.log(error);\n              break;\n          }\n        }\n        return throwError(error);\n      })\n    )\n  }\n}\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { BsDropdownModule } from 'ngx-bootstrap/dropdown';\nimport { ToastrModule } from 'ngx-toastr';\n\n@NgModule({\n  declarations: [],\n  imports: [\n    CommonModule,\n    BsDropdownModule.forRoot(),\n    ToastrModule.forRoot({\n      positionClass: 'toast-bottom-right'\n    })\n  ],\n  exports: [\n    BsDropdownModule,\n    ToastrModule\n  ]\n})\nexport class SharedModule { }\n","import { Injectable } from '@angular/core';\nimport { HttpClient } from '@angular/common/http';\nimport { catchError, map } from 'rxjs/operators';\nimport { User } from '../_models/user';\nimport { LectureUser } from '../_models/lectureUser';\nimport { ReplaySubject, Observable, of, throwError } from 'rxjs';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class AccountService {\n  baseUrl = 'https://localhost:5001/api/';\n\n  private currentUserSource = new ReplaySubject<User>(1);\n  currentUser$ = this.currentUserSource.asObservable();\n\n  private registrationCompletedSource = new ReplaySubject<boolean>(1);\n  registrationCompleted$ = this.registrationCompletedSource.asObservable();\n\n  constructor(private http: HttpClient) { }\n\n  login(model: any): Observable<void> {\n    return this.http.post<User>(this.baseUrl + 'account/login', model).pipe(\n      map((response: User) => {\n        const user = response;\n        if (user) {\n          localStorage.setItem('user', JSON.stringify(user));\n          this.currentUserSource.next(user);\n        }\n      })\n    );\n  }\n\n  register(model: any): Observable<void> {\n    return this.http.post<LectureUser>(this.baseUrl + 'account/register', model).pipe(\n      map((user: LectureUser) => {\n        if (user) {\n          this.registrationCompletedSource.next(true);\n        }\n      })\n    );\n  }\n\n  setCurrentUser(user: User) {\n    this.currentUserSource.next(user);\n  }\n\n  logout() {\n    localStorage.removeItem('user');\n    this.currentUserSource.next(null);\n  }\n\n  getUsers(): Observable<any[]> {\n    const user = JSON.parse(localStorage.getItem('user'));\n\n    if (user && user.token) {\n      const headers = {\n        'Authorization': `Bearer ${user.token}`\n      };\n\n      return this.http.get<any[]>(this.baseUrl + 'users', { headers: headers });\n    } else {\n      return of([]);\n    }\n  }\n\n  deleteUser(userToDelete: any): Observable<void> {\n    const currentUser = JSON.parse(localStorage.getItem('user'));\n\n    if (currentUser && currentUser.token) {\n      const headers = {\n        'Authorization': `Bearer ${currentUser.token}`\n      };\n\n      return this.http.post<void>(`${this.baseUrl}users/delete`, userToDelete, { headers: headers })\n    }\n}\n\n\n}\n","import { Injectable } from '@angular/core';\r\nimport { BehaviorSubject } from 'rxjs';\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class PdfDisplayService {\r\n  private showPdfSource = new BehaviorSubject<boolean>(false);\r\n  currentShowPdf = this.showPdfSource.asObservable();\r\n\r\n  constructor() { }\r\n\r\n  changeShowPdf(showPdf: boolean) {\r\n    this.showPdfSource.next(showPdf);\r\n  }\r\n}\r\n","import { NgModule } from '@angular/core';\nimport { Routes, RouterModule } from '@angular/router';\nimport { HomeComponent } from './home/home.component';\nimport { TestErrorsComponent } from './errors/test-errors/test-errors.component';\nimport { NotFoundComponent } from './errors/not-found/not-found.component';\nimport { ServerErrorComponent } from './errors/server-error/server-error.component';\nimport { RegistrationComponent } from './registration/registration.component';\nimport { ProgramComponent } from './program/program.component';\nimport { ContactComponent } from './contact/contact.component';\nimport { RootComponent } from './root/root.component';\nimport { UsersComponent } from './users/users.component';\nimport { authGuard } from './_guards/auth.guard';\nimport { GenerateProgramComponent } from './generate-program/generate-program.component';\n\nconst routes: Routes = [\n  {path: '', component: HomeComponent},\n  { path: 'registration', component: RegistrationComponent },\n  { path: 'program', component: ProgramComponent },\n  { path: 'contact', component: ContactComponent },\n  { path: 'root', component: RootComponent },\n  {\n    path: '',\n    runGuardsAndResolvers: 'always',\n    canActivate: [authGuard],\n    children: [\n      { path: 'users', component: UsersComponent, canActivate: [authGuard] },\n      { path: 'generate-program', component: GenerateProgramComponent, canActivate: [authGuard] },\n\n    ]\n  },\n  {path: 'errors', component: TestErrorsComponent},\n  {path: 'not-found', component: NotFoundComponent},\n  {path: 'server-error', component: ServerErrorComponent},\n  {path: '**', component: NotFoundComponent, pathMatch: 'full'},\n];\n\n@NgModule({\n  imports: [RouterModule.forRoot(routes, {})],\n  exports: [RouterModule]\n})\nexport class AppRoutingModule { }\n","import { Component, OnInit } from '@angular/core';\nimport { HttpClient } from '@angular/common/http';\nimport { User } from './_models/user';\nimport { AccountService } from './_services/account.service';\n\n@Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.css']\n})\nexport class AppComponent implements OnInit {\n  title = 'NeuroMet';\n  users: any;\n\n  constructor(private accountService: AccountService) {}\n\n  ngOnInit() {\n    this.setCurrentUser();\n  }\n\n  setCurrentUser() {\n    const user: User = JSON.parse(localStorage.getItem('user'));\n    this.accountService.setCurrentUser(user);\n  }\n}\n","<section class=\"vh-100\" style=\"background-color: #249e90;\">\n    <app-nav></app-nav>\n    <div class=\"container gradient-custom-content\">\n        <router-outlet></router-outlet>\n    </div>\n</section>\n<app-footer></app-footer>\n","import { BrowserModule } from '@angular/platform-browser';\nimport { NgModule } from '@angular/core';\nimport { HttpClientModule, HTTP_INTERCEPTORS } from '@angular/common/http';\nimport { FormsModule } from '@angular/forms';\n\nimport { AppRoutingModule } from './app-routing.module';\nimport { AppComponent } from './app.component';\nimport { BrowserAnimationsModule } from '@angular/platform-browser/animations';\nimport { NavComponent } from './nav/nav.component';\nimport { HomeComponent } from './home/home.component';\nimport { SharedModule } from './_modules/shared.module';\nimport { TestErrorsComponent } from './errors/test-errors/test-errors.component';\nimport { ErrorInterceptor } from './_interceptors/error.interceptor';\nimport { NotFoundComponent } from './errors/not-found/not-found.component';\nimport { ServerErrorComponent } from './errors/server-error/server-error.component';\nimport { RegistrationComponent } from './registration/registration.component';\nimport { ProgramComponent } from './program/program.component';\nimport { ContactComponent } from './contact/contact.component';\nimport { RootComponent } from './root/root.component';\nimport { FooterComponent } from './footer/footer.component';\nimport { UsersComponent } from './users/users.component';\nimport { ReactiveFormsModule } from '@angular/forms';\nimport { RecaptchaModule, RecaptchaFormsModule } from 'ng-recaptcha';\nimport { GenerateProgramComponent } from './generate-program/generate-program.component';\n\n@NgModule({\n  declarations: [\n    AppComponent,\n    NavComponent,\n    HomeComponent,\n    TestErrorsComponent,\n    NotFoundComponent,\n    ServerErrorComponent,\n    RegistrationComponent,\n    ProgramComponent,\n    ContactComponent,\n    RootComponent,\n    FooterComponent,\n    UsersComponent,\n    GenerateProgramComponent\n  ],\n  imports: [\n    BrowserModule,\n    AppRoutingModule,\n    HttpClientModule,\n    BrowserAnimationsModule,\n    FormsModule,\n    SharedModule,\n    ReactiveFormsModule,\n    RecaptchaModule,  \n    RecaptchaFormsModule,\n  ],\n  providers: [\n    {provide: HTTP_INTERCEPTORS, useClass: ErrorInterceptor, multi: true}\n  ],\n  bootstrap: [AppComponent]\n})\nexport class AppModule { }\n","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-contact',\n  templateUrl: './contact.component.html',\n  styleUrls: ['./contact.component.css']\n})\nexport class ContactComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit(): void {\n  }\n\n}\n","<div class=\"container-fluid\">\n  <div class=\"row justify-content-center align-items-center vh-100\">\n    <div class=\"col-12 col-lg-9 col-xl-7\">\n      <div class=\"card shadow-2-strong card-registration\" style=\"border-radius: 15px;\">\n        <div class=\"card-body p-4 p-md-5 text-center\">\n\n          <div class=\"contact-info\">\n            <h2 class=\"mb-4\">KONTAKT</h2>\n            <p>dr hab. inż. Krzysztof Regulski, prof. AGH</p>\n            <p>tel.: (0-12) 617 41 31</p>\n            <p>e-mail: <a href=\"mailto:regulski@agh.edu.pl\">regulski&#64;agh.edu.pl</a></p>\n          </div>\n\n          <hr class=\"my-4\">\n\n          <div class=\"contact-info\">\n            <p>dr inż. Łukasz Sztangret</p>\n            <p>tel.: (0-12) 617 41 83</p>\n            <p>e-mail: <a href=\"mailto:szt@agh.edu.pl\">szt&#64;agh.edu.pl</a></p>\n          </div>\n\n          <hr class=\"my-4\">\n\n          <div class=\"contact-info\">\n            <p>Akademia Górniczo-Hutnicza w Krakowie</p>\n            <p>Wydział Inżynierii Metali i Informatyki Przemysłowej</p>\n            <p>Katedra Informatyki Stosowanej i Modelowania</p>\n            <div class=\"contact-images\">\n              <img src=\"assets/isim.png\" alt=\"Description of Image 1\" class=\"contact-image\">\n              <img src=\"assets/aghLogo.png\" alt=\"Description of Image 2\" class=\"contact-image\">\n            </div>\n          </div>\n\n        </div>\n      </div>\n    </div>\n  </div>\n</div>\n","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-not-found',\n  templateUrl: './not-found.component.html',\n  styleUrls: ['./not-found.component.css']\n})\nexport class NotFoundComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit(): void {\n  }\n\n}\n","<div class=\"container\">\n    <h1>Not found</h1>\n    <button class=\"btn btn-info btn-lg\" routerLink='/'>Return to home page</button>\n</div>\n","import { Component, OnInit } from '@angular/core';\nimport { Router } from '@angular/router';\n\n@Component({\n  selector: 'app-server-error',\n  templateUrl: './server-error.component.html',\n  styleUrls: ['./server-error.component.css']\n})\nexport class ServerErrorComponent implements OnInit {\n  error: any;\n\n  constructor(private router: Router) {\n    const navigation = this.router.getCurrentNavigation();\n    this.error = navigation?.extras?.state?.error;\n   }\n\n  ngOnInit(): void {\n  }\n\n}\n","<h4>Internal server error - refreshing the page will make the error disappear!</h4>\n<ng-container *ngIf=\"error\">\n    <h5 class='text-danger'>Error: {{error.message}}</h5>\n    <p class=\"font-weight-bold\">Note: If you are seeing this then Angular is probably not to blame</p>\n    <p>What to do next?</p>\n    <ol>\n        <li>Open the chrome dev tools</li>\n        <li>Inspect the network tab</li>\n        <li>Check the failing request</li>\n        <li>Examine the request URL - make sure it is correct</li>\n        <li>Reproduce the error in Postman - if we see the same response, then the issue is not with Angular</li>\n    </ol>\n    <p>Following is the stack trace - this is where your investigation should start!</p>\n    <code class=\"mt-5\" style=\"background-color: whitesmoke;\">{{error.details}}</code>\n</ng-container>\n","import { Component, OnInit } from '@angular/core';\nimport { HttpClient } from '@angular/common/http';\n\n@Component({\n  selector: 'app-test-errors',\n  templateUrl: './test-errors.component.html',\n  styleUrls: ['./test-errors.component.css']\n})\nexport class TestErrorsComponent implements OnInit {\n  baseUrl = 'https://localhost:5001/api/';\n  validationErrors: string[] = [];\n\n  constructor(private http: HttpClient) { }\n\n  ngOnInit(): void {\n  }\n\n  get404Error() {\n    this.http.get(this.baseUrl + 'buggy/not-found').subscribe(response => {\n      console.log(response);\n    }, error => {\n      console.log(error);\n    })\n  }\n\n  get400Error() {\n    this.http.get(this.baseUrl + 'buggy/bad-request').subscribe(response => {\n      console.log(response);\n    }, error => {\n      console.log(error);\n    })\n  }\n\n  get500Error() {\n    this.http.get(this.baseUrl + 'buggy/server-error').subscribe(response => {\n      console.log(response);\n    }, error => {\n      console.log(error);\n    })\n  }\n\n  get401Error() {\n    this.http.get(this.baseUrl + 'buggy/auth').subscribe(response => {\n      console.log(response);\n    }, error => {\n      console.log(error);\n    })\n  }\n\n  get400ValidationError() {\n    this.http.post(this.baseUrl + 'account/register', {}).subscribe(response => {\n      console.log(response);\n    }, error => {\n      console.log(error);\n      this.validationErrors = error;\n    })\n  }\n\n}\n","<ng-container>\n    <button (click)=\"get500Error()\" class=\"btn btn-outline-primary mr-3\">Test 500 Error</button>\n    <button (click)=\"get400Error()\" class=\"btn btn-outline-primary mr-3\">Test 400 Error</button>\n    <button (click)=\"get401Error()\" class=\"btn btn-outline-primary mr-3\">Test 401 Error</button>\n    <button (click)=\"get404Error()\" class=\"btn btn-outline-primary mr-3\">Test 404 Error</button>\n    <button (click)=\"get400ValidationError()\" class=\"btn btn-outline-primary mr-3\">\n        Test 400 Validation Error</button>\n\n    <div class=\"row mt-5\" *ngIf=\"validationErrors.length > 0\">\n        <ul class=\"text-danger\">\n            <li *ngFor=\"let error of validationErrors\">\n                {{error}}\n            </li>\n        </ul>\n    </div>\n</ng-container>","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-footer',\n  templateUrl: './footer.component.html',\n  styleUrls: ['./footer.component.css']\n})\nexport class FooterComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit(): void {\n  }\n\n}\n","<footer>\n  <a href=\"http://www.isim.agh.edu.pl/\" target=\"_blank\">www.isim.agh.edu.pl</a>\n</footer>\n","import { Component, ElementRef, OnInit, ViewChild } from '@angular/core';\r\nimport { UntypedFormBuilder, UntypedFormGroup, Validators } from '@angular/forms';\r\nimport { AccountService } from '../_services/account.service';\r\nimport * as pdfMake from 'pdfmake/build/pdfmake';\r\nimport * as pdfFonts from 'pdfmake/build/vfs_fonts';\r\nimport { Content, TDocumentDefinitions } from 'pdfmake/interfaces';\r\nimport { HttpClient } from '@angular/common/http';\r\nimport { PdfDisplayService } from '../_services/pdf-display.service';\r\n\r\n(pdfMake as any).vfs = pdfFonts.pdfMake.vfs;\r\n\r\n@Component({\r\n  selector: 'app-generate-program',\r\n  templateUrl: './generate-program.component.html',\r\n  styleUrls: ['./generate-program.component.css']\r\n})\r\nexport class GenerateProgramComponent implements OnInit {\r\n  recordForm: UntypedFormGroup;\r\n  records: any[] = [];\r\n  users: any[] = []; \r\n  selectedUser: any; \r\n  editingIndex: number | null = null; \r\n  tempName: string = ''; \r\n  tempSubject: string = ''; \r\n  constructor(\r\n    private formBuilder: UntypedFormBuilder,\r\n    public accountService: AccountService,\r\n    private http: HttpClient,\r\n    private pdfDisplayService: PdfDisplayService,\r\n  ) {}\r\n\r\n  ngOnInit() {\r\n    this.initForm();\r\n    this.loadUsers(); \r\n  }\r\n\r\n  initForm() {\r\n    this.recordForm = this.formBuilder.group({\r\n      time: ['', Validators.required],\r\n      name: ['', Validators.required],\r\n      subject: [{value: '', disabled: true}, Validators.required] \r\n    });\r\n  }\r\n  \r\n  editRecord(index: number) {\r\n    this.editingIndex = index;\r\n    this.tempName = this.records[index].name; \r\n    this.tempSubject = this.records[index].subject; \r\n  }\r\n\r\n  saveChanges(index: number) {\r\n    if (this.editingIndex !== null) {\r\n      this.records[index].name = this.tempName;\r\n      this.records[index].subject = this.tempSubject; \r\n      this.editingIndex = null; \r\n    }\r\n  }\r\n\r\n  cancelEdit() {\r\n    this.editingIndex = null; \r\n  }\r\n\r\n  loadUsers() {\r\n    this.accountService.getUsers().subscribe(\r\n      (users: any[]) => {\r\n        this.users = users.filter(user => user.presentation && user.presentation.trim() !== '');\r\n      },\r\n      (error) => {\r\n        console.error('Error fetching users:', error);\r\n      }\r\n    );\r\n  }\r\n\r\n  addRecord() {\r\n    if (this.recordForm.valid && this.selectedUser) {\r\n      const record = {\r\n        time: this.recordForm.get('time').value,\r\n        name: `${this.selectedUser.firstName} ${this.selectedUser.secondName}`, \r\n        subject: this.recordForm.get('subject').value\r\n      };\r\n      this.records.push(record);\r\n      this.records.sort((a, b) => {\r\n        const timeA = a.time.split(':').map(Number);\r\n        const timeB = b.time.split(':').map(Number);\r\n        return timeA[0] * 60 + timeA[1] - (timeB[0] * 60 + timeB[1]);\r\n      });\r\n      this.recordForm.reset();\r\n      this.selectedUser = null; \r\n      this.recordForm.get('subject').disable(); \r\n    }\r\n  }\r\n  \r\n\r\n  onUserChange(user: any) {\r\n    this.selectedUser = user; \r\n    if (user && user.presentation) {\r\n      this.recordForm.get('subject').enable();\r\n      this.recordForm.get('subject').setValue(user.presentation);\r\n    } else {\r\n      this.recordForm.get('subject').reset();\r\n      this.recordForm.get('subject').disable();\r\n    }\r\n  }\r\n\r\n  async saveAsPDF() {\r\n\r\n    const imageUrlBackground = 'assets/background.png'; \r\n    const base64ImageBackground = await this.getImageBase64(imageUrlBackground);\r\n  \r\n    const imageUrlAgh = 'assets/aghpdf.png'; \r\n    const base64ImageAgh = await this.getImageBase64(imageUrlAgh);\r\n  \r\n    const imageUrlIsim = 'assets/isimpdf.png'; \r\n    const base64ImageIsim = await this.getImageBase64(imageUrlIsim);\r\n  \r\n    const chunkSize = 10;\r\n    const chunks = [];\r\n  \r\n    for (let i = 0; i < this.records.length; i += chunkSize) {\r\n      const chunk = this.records.slice(i, i + chunkSize);\r\n      chunks.push(chunk);\r\n    }\r\n  \r\n    const content = []; \r\n  \r\n    chunks.forEach((chunk, index) => {\r\n      if (index > 0) {\r\n        content.push({ text: '', pageBreak: 'after' });\r\n      }\r\n  \r\n      const tableBody = chunk.map(record => ([\r\n        { text: record.time, style: 'tableTitle' },\r\n        {\r\n          stack: [\r\n            { text: record.subject, style: 'tableTitle' }, \r\n            { text: record.name, style: 'tableBody' }, \r\n          ]\r\n        }\r\n      ]));\r\n  \r\n      content.push(\r\n        { image: base64ImageBackground, width: 600, height: 850, absolutePosition: { x: 0, y: 0 } },\r\n        { image: base64ImageAgh, width: 150, height: 100, absolutePosition: { x: 10, y: 720 } },\r\n        { image: base64ImageIsim, width: 200, height: 100, absolutePosition: { x: 10, y: 10 } },\r\n        {\r\n          table: {\r\n            widths: ['10%', '75%'],\r\n            body: [\r\n              [{ text: 'Time', style: 'tableHeader' }, { text: 'Description', style: 'tableHeader' }],\r\n              ...tableBody\r\n            ]\r\n          },\r\n          layout: {\r\n            hLineWidth: function (i) { return 0; },\r\n            vLineWidth: function (i) { return 0; },\r\n            paddingLeft: function (i) { return i === 0 ? 0 : 8; },\r\n            paddingRight: function (i, node) { return i === node.table.widths.length - 1 ? 0 : 8; },\r\n            paddingTop: function (i) { return 5; },\r\n            paddingBottom: function (i) { return 5; }\r\n          },\r\n          alignment: 'center',\r\n          margin: [0, 250]\r\n        },\r\n        {\r\n          text: [\r\n            'Akademia Górniczo-Hutnicza w Krakowie\\n',\r\n            'Wydział Inżynierii Metali i Informatyki Przemysłowej\\n',\r\n            'Katedra Informatyki Stosowanej i Modelowania\\n',\r\n            'neuromet.agh.edu.pl'\r\n          ],\r\n          alignment: 'center',\r\n          style: 'tableBody',\r\n          absolutePosition: { x: 50, y: 735 }\r\n        }\r\n      );\r\n    });\r\n  \r\n    const docDefinition: TDocumentDefinitions = {\r\n      pageSize: 'A4',\r\n      pageMargins: [50, 30, 40, 60],\r\n      styles: {\r\n        tableHeader: { bold: true, fontSize: 12, color: 'white' },\r\n        tableTitle: { bold: true, fontSize: 9, color: 'white' },\r\n        tableBody: { fontSize: 8, color: 'white' }\r\n      },\r\n      content: content\r\n    };\r\n  \r\n    pdfMake.createPdf(docDefinition).download(\"program\");\r\n  }\r\n  \r\n\r\n  getImageBase64(url: string): Promise<string> {\r\n    return this.http\r\n      .get(url, { responseType: 'blob' })\r\n      .toPromise()\r\n      .then(blob => new Promise<string>((resolve, reject) => {\r\n        const reader = new FileReader();\r\n        reader.onloadend = () => resolve(reader.result as string);\r\n        reader.onerror = reject;\r\n        reader.readAsDataURL(blob);\r\n      }));\r\n  }\r\n  \r\n}\r\n","<div class=\"container-fluid custom-container\">\r\n  <div class=\"row justify-content-center align-items-center vh-100\">\r\n    <div class=\"col-12 col-md-12 col-lg-10 col-xl-10\">\r\n      <div class=\"card shadow-2-strong card-registration\" style=\"border-radius: 15px;\">\r\n        <div class=\"card-body p-3 p-md-3 text-center\">    \r\n          <form [formGroup]=\"recordForm\" (ngSubmit)=\"addRecord()\" class=\"record-form\">\r\n            <div class=\"form-group\">\r\n              <label for=\"time\">Time:</label>\r\n              <input type=\"time\" class=\"form-control\" formControlName=\"time\">\r\n            </div>\r\n            <div class=\"form-group\">\r\n              <label for=\"name\">Name:</label>\r\n              <select class=\"form-control\" formControlName=\"name\" [(ngModel)]=\"selectedUser\" (ngModelChange)=\"onUserChange($event)\">\r\n                  <option *ngFor=\"let user of users\" [ngValue]=\"user\">{{user.firstName}} {{user.secondName}}</option>\r\n                </select>          \r\n            </div>\r\n            <div class=\"form-group\">\r\n              <label for=\"subject\">Subject (Presentation Title):</label>\r\n              <input type=\"text\" class=\"form-control\" formControlName=\"subject\" placeholder=\"Presentation Title\" readonly>\r\n            </div>\r\n            <div class=\"row mb-3\">\r\n                <button type=\"submit\" class=\"btn btn-primary w-100\">Add Record</button>\r\n                <button (click)=\"saveAsPDF()\" class=\"btn btn-info w-100 save-pdf-btn\">Save as PDF</button>\r\n            </div>\r\n          </form>\r\n            \r\n          <div #recordsTable class=\"table-responsive scrollable-table record-table\">\r\n            <table class=\"table\">\r\n              <thead>\r\n                <tr>\r\n                  <th>Time</th>\r\n                  <th>Name</th>\r\n                  <th>Subject</th>\r\n                </tr>\r\n              </thead>\r\n              <tbody>\r\n                <tr *ngFor=\"let record of records; let i = index\">\r\n                  <td>{{record.time}}</td>\r\n                  <td>\r\n                    <div *ngIf=\"editingIndex === i; else viewModeName\">\r\n                      <input [(ngModel)]=\"tempName\" type=\"text\" class=\"form-control\">\r\n                    </div>\r\n                    <ng-template #viewModeName>{{record.name}}</ng-template>\r\n                  </td>\r\n                  <td>\r\n                    <div *ngIf=\"editingIndex === i; else viewModeSubject\">\r\n                      <input [(ngModel)]=\"tempSubject\" type=\"text\" class=\"form-control\">\r\n                    </div>\r\n                    <ng-template #viewModeSubject>{{record.subject}}</ng-template>\r\n                  </td>\r\n                  <td>\r\n                    <div *ngIf=\"editingIndex === i; else editButton\">\r\n                      <button class=\"btn btn-success\" (click)=\"saveChanges(i)\">Save</button>\r\n                      <button class=\"btn btn-secondary\" (click)=\"cancelEdit()\">Cancel</button>\r\n                    </div>\r\n                    <ng-template #editButton>\r\n                      <button class=\"btn btn-primary\" (click)=\"editRecord(i)\">Edit</button>\r\n                    </ng-template>\r\n                  </td>\r\n                </tr>\r\n              </tbody>\r\n            </table>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  </div>\r\n</div>","import { Component, OnInit } from '@angular/core';\nimport { HttpClient } from '@angular/common/http';\n\n@Component({\n  selector: 'app-home',\n  templateUrl: './home.component.html',\n  styleUrls: ['./home.component.css']\n})\nexport class HomeComponent implements OnInit {\n  registerMode = false;\n\n  constructor() { }\n\n  ngOnInit(): void {\n  }\n\n  registerToggle() {\n    this.registerMode = !this.registerMode;\n  }\n\n  cancelRegisterMode(event: boolean) {\n    this.registerMode = event;\n  }\n\n}\n","<div class=\"container-fluid\">\n  <div class=\"row justify-content-center align-items-center vh-100\">\n    <div class=\"col-12 col-lg-9 col-xl-7\">\n      <div class=\"card shadow-2-strong card-registration\" style=\"border-radius: 15px;\">\n        <div class=\"card-body p-4 p-md-5 text-center\">\n\n          <h2 class=\"mb-4\">Seminarium na temat:</h2>\n\n          <p class=\"lead mb-4\">\n            \"ZASTOSOWANIE SZTUCZNEJ INTELIGENCJI W SYMULACJI I STEROWANIU PROCESAMI METALURGICZNYMI\"\n          </p>\n\n          <p class=\"mb-4\">\n            Odbyło się 18 kwietnia 2023 w Akademii Górniczo-Hutniczej im. Stanisława Staszica w Krakowie.\n          </p>\n\n          <p class=\"mb-4\">\n            Tegoroczne Seminarium NeuroMet było dwudziestym piątym z serii spotkań, których celem jest stworzenie platformy do wymiany doświadczeń\n            w zakresie zastosowania sztucznej inteligencji do symulacji i sterowania procesami metalurgicznymi.\n          </p>\n\n          <p class=\"mb-4\">\n            Zachęcamy do zgłoszeń w przyszłym roku w tematyce uczenia maszynowego, Industry 4.0, analizy danych i optymalizacji. Zapraszamy do\n            prezentacji wyników badań, wyników prac badawczych i wdrożeniowych oraz tematyk badawczych doktoratów. Udział w seminarium jest bezpłatny.\n          </p>\n\n          <p class=\"mb-4\">\n            Zapraszamy!\n          </p>\n\n          <div class=\"text-left mb-4\">\n            <strong>ORGANIZATOR SEMINARIUM</strong>\n            <br>\n            Katedra Informatyki Stosowanej i Modelowania\n            <br>\n            Przewodniczący Komitetu Organizacyjnego\n            <br>\n            dr hab. inż. Krzysztof Regulski, prof. AGH\n          </div>\n\n      </div>\n    </div>\n  </div>\n</div>\n\n<app-footer></app-footer>\n\n","import { Component, OnInit } from '@angular/core';\nimport { AccountService } from '../_services/account.service';\nimport { Observable } from 'rxjs';\nimport { User } from '../_models/user';\nimport { Router } from '@angular/router';\nimport { ToastrService } from 'ngx-toastr';\n\n@Component({\n  selector: 'app-nav',\n  templateUrl: './nav.component.html',\n  styleUrls: ['./nav.component.css']\n})\nexport class NavComponent implements OnInit {\n  model: any = {}\n\n  constructor(public accountService: AccountService, private router: Router, \n    private toastr: ToastrService) { }\n\n  ngOnInit(): void {\n  }\n\n  login() {\n    this.accountService.login(this.model).subscribe(response => {\n      this.router.navigateByUrl('/members');\n    })\n  }\n\n  logout() {\n    this.accountService.logout();\n    this.router.navigateByUrl('/')\n  }\n  \n}\n","<nav class=\"navbar navbar-expand-md navbar-dark fixed-top\" style=\"background-color: #222a3f;\">\n\n  <div class=\"container\">\n    <img src=\"assets/neurometlogo.ico\" alt=\"NeuroMet Logo\" width=\"60\" height=\"60\" class=\"d-inline-block align-top mr-2\">\n      <a class=\"navbar-brand\" routerLink='/'>\n        NeuroMet\n      </a>\n\n        <ul class=\"navbar-nav mr-auto\">\n            <ng-container *ngIf=\"accountService.currentUser$ | async; else anonymousUser\">\n              <li class=\"nav-item\">\n                <a class=\"nav-link\" routerLink='/users' routerLinkActive='active'>Users</a>\n              </li>\n              <li class=\"nav-item\">\n                <a class=\"nav-link\" routerLink='/generate-program' routerLinkActive='active'>Generate Program</a>\n              </li>\n            </ng-container>\n          \n            <ng-template #anonymousUser>\n              <li class=\"nav-item\">\n                <a class=\"nav-link\" routerLink='/registration' routerLinkActive='active'>Registration</a>\n              </li>\n              <li class=\"nav-item\">\n                <a class=\"nav-link\" routerLink='/program' routerLinkActive='active'>Program</a>\n              </li>\n              <li class=\"nav-item\">\n                <a class=\"nav-link\" routerLink='/contact' routerLinkActive='active'>Contact</a>\n              </li>\n            </ng-template>\n          </ul>\n\n        <div class=\"dropdown\" *ngIf=\"(accountService.currentUser$ | async) as user\" dropdown>\n            <a class=\"dropdown-toggle text-light\" dropdownToggle>Welcome {{user.username | titlecase}}</a>\n            <div class=\"dropdown-menu mt-3\" *dropdownMenu>\n                <a class=\"dropdown-item\" (click)=\"logout()\" >Logout</a>\n            </div>\n        </div>\n    </div>\n</nav>\n","import { Component, OnInit } from '@angular/core';\nimport { PdfDisplayService } from '../_services/pdf-display.service';\n@Component({\n  selector: 'app-program',\n  templateUrl: './program.component.html',\n  styleUrls: ['./program.component.css']\n})\nexport class ProgramComponent implements OnInit {\n  showPdf: boolean = false;\n\n  constructor() { }\n\n  ngOnInit(): void {\n  }\n\n  openPdf() {\n    const pdfUrl = 'assets/program.pdf'; \n    window.open(pdfUrl, '_blank'); \n  }\n}","<div class=\"container-fluid\">\n  <div class=\"row justify-content-center align-items-center vh-100\">\n    <div class=\"col-12 col-lg-9 col-xl-7\">\n      <div class=\"card shadow-2-strong card-registration\" style=\"border-radius: 15px;\">\n        <div class=\"card-body p-4 p-md-5\">\n          <div class=\"button-container\">\n            <button class=\"btn btn-primary mb-3\" (click)=\"openPdf()\">Open Program PDF</button>\n          </div>\n        </div>\n      </div>\n    </div>\n  </div>\n</div>\n","import { Component, OnInit, Output, EventEmitter } from '@angular/core';\nimport { AccountService } from '../_services/account.service';\nimport { ToastrService } from 'ngx-toastr';\nimport { UntypedFormBuilder, UntypedFormGroup, Validators } from '@angular/forms';\nimport { RecaptchaFormsModule, RecaptchaModule } from 'ng-recaptcha';\n\n@Component({\n  selector: 'app-registration',\n  templateUrl: './registration.component.html',\n  styleUrls: ['./registration.component.css'],\n})\nexport class RegistrationComponent implements OnInit {\n  @Output() cancelRegister = new EventEmitter();\n  model: any = {};\n  registrationCompleted = false;\n  registerForm: UntypedFormGroup; \n  presentationCheckboxChecked = false;\n  siteKey: string;\n\n  constructor(\n    private accountService: AccountService, \n    private toastr: ToastrService,\n    private formBuilder: UntypedFormBuilder,\n  ) { \n    this.siteKey = '6Ldx0mEpAAAAAEYeb1lnfYgHQeUc3FitRJ7x1p_G';\n    this.accountService.registrationCompleted$.subscribe((completed) => {\n      this.registrationCompleted = completed;\n    });\n    this.registrationCompleted = false;\n  }\n\n  ngOnInit(): void {\n    this.initForm();\n  }\n\n  initForm() {\n    this.registerForm = this.formBuilder.group({\n      firstName: ['', [Validators.required, Validators.minLength(2), Validators.maxLength(50)]],\n      secondName: ['', [Validators.required, Validators.minLength(2), Validators.maxLength(50)]],\n      emailAddress: ['', [Validators.required, Validators.email]],\n      university: ['', [Validators.required]],\n      presentation: [{value: '', disabled: true}, [Validators.minLength(2), Validators.maxLength(200)]],\n      recaptchaReactive: [null, Validators.required]  // Add this line\n    });\n  }\n\n  register() {\n    if (this.registerForm.valid) {\n      this.accountService.register(this.registerForm.value).subscribe(response => {\n        console.log(response);\n        this.cancel();\n      }, error => {\n        console.log(error);\n        this.toastr.error(error.error);\n      });\n    } else {\n      this.toastr.error('Form is not valid!');\n    }\n  }\n\n  cancel() {\n    this.cancelRegister.emit(false);\n  }\n\n  togglePresentationField() {\n    this.presentationCheckboxChecked = !this.presentationCheckboxChecked;\n    if (this.presentationCheckboxChecked) {\n      this.registerForm.get('presentation').enable();\n    } else {\n      this.registerForm.get('presentation').disable();\n    }\n  }\n\n}\n","<div class=\"container-fluid\">\n  <div class=\"row justify-content-center align-items-center vh-100\">\n    <div class=\"col-12 col-lg-9 col-xl-7\">\n      <div class=\"card shadow-2-strong card-registration\" style=\"border-radius: 15px;\">\n        <div class=\"card-body p-4 p-md-5 text-center\">\n\n          <form *ngIf=\"!registrationCompleted\" [formGroup]=\"registerForm\" (ngSubmit)=\"register()\" autocomplete=\"off\">\n            <h2 class=\"text-center\">Sign up</h2>\n            <hr>\n              \n            <div class=\"form-group\">\n              <input type=\"text\" class=\"form-control\" formControlName=\"firstName\" placeholder=\"First Name\">\n              <small *ngIf=\"registerForm.controls.firstName.touched && registerForm.controls.firstName.errors\" class=\"text-danger\">\n                <div *ngIf=\"registerForm.controls.firstName.errors.required\">First name is required.</div>\n                <div *ngIf=\"registerForm.controls.firstName.errors.minlength\">First name must be at least 2 characters long.</div>\n                <div *ngIf=\"registerForm.controls.firstName.errors.maxlength\">First name cannot be more than 50 characters long.</div>\n              </small>\n            </div>\n\n            <div class=\"form-group\">\n              <input type=\"text\" class=\"form-control\" formControlName=\"secondName\" placeholder=\"Last Name\">\n              <small *ngIf=\"registerForm.controls.secondName.touched && registerForm.controls.secondName.errors\" class=\"text-danger\">\n                <div *ngIf=\"registerForm.controls.secondName.errors.required\">Last name is required.</div>\n                <div *ngIf=\"registerForm.controls.secondName.errors.minlength\">Last name must be at least 2 characters long.</div>\n                <div *ngIf=\"registerForm.controls.secondName.errors.maxlength\">Last name cannot be more than 50 characters long.</div>\n              </small>\n            </div>\n            \n              <div class=\"form-group\">\n                <input type=\"email\" class=\"form-control\" formControlName=\"emailAddress\" placeholder=\"Email Address\">\n                <small *ngIf=\"registerForm.controls.emailAddress.touched && registerForm.controls.emailAddress.errors\" class=\"text-danger\">\n                  <div *ngIf=\"registerForm.controls.emailAddress.errors.required\">Email is required.</div>\n                  <div *ngIf=\"registerForm.controls.emailAddress.errors.email\">Please enter a valid email address.</div>\n                </small>\n              </div>\n            \n              <div class=\"form-group\">\n                <input type=\"text\" class=\"form-control\" formControlName=\"university\" placeholder=\"University\">\n                <small *ngIf=\"registerForm.controls.university.touched && registerForm.controls.university.errors\" class=\"text-danger\">\n                  <div *ngIf=\"registerForm.controls.university.errors.required\">University is required.</div>\n                  <div *ngIf=\"registerForm.controls.university.errors.minlength\">University must be at least 2 characters long.</div>\n                  <div *ngIf=\"registerForm.controls.university.errors.maxlength\">University cannot be more than 50 characters long.</div>\n                </small>\n              </div>\n\n              <div class=\"form-group\">\n                <div class=\"form-check\">\n                  <input type=\"checkbox\" class=\"form-check-input\" id=\"presentationCheckbox\" (change)=\"togglePresentationField()\">\n                  <label class=\"form-check-label\" for=\"presentationCheckbox\">Presentation</label>\n                </div>\n              </div>\n              \n              <div class=\"form-group\">\n                <input type=\"text\" class=\"form-control\" formControlName=\"presentation\" placeholder=\"Presentation Title\">\n                <small *ngIf=\"registerForm.controls.presentation.touched && registerForm.controls.presentation.errors\" class=\"text-danger\">\n                  <div *ngIf=\"registerForm.controls.presentation.errors.required\">Presentation Title is required.</div>\n                  <div *ngIf=\"registerForm.controls.presentation.errors.minlength\">Presentation Title must be at least 2 characters long.</div>\n                  <div *ngIf=\"registerForm.controls.presentation.errors.maxlength\">Presentation Title cannot be more than 100 characters long.</div>\n                </small>\n              </div>\n              \n\n            \n              <div class=\"form-group text-center\">\n                <div class=\"text-center\"> \n                  <re-captcha \n                    (resolved)=\"resolved($event)\" \n                    [siteKey]=\"siteKey\"\n                    formControlName=\"recaptchaReactive\">\n                  </re-captcha>\n                </div>\n                \n                <button class=\"btn btn-success mr-2\" type=\"submit\" [disabled]=\"registerForm.invalid\">Register</button>\n                <button class=\"btn btn-default mr-2\" (click)=\"cancel()\" type=\"button\">Cancel</button>\n              </div>\n            </form>\n            \n\n\n\n            <div *ngIf=\"registrationCompleted\" class=\"alert alert-success mt-3\">\n              Registration Completed!\n            </div>\n\n        </div>\n      </div>\n    </div>\n</div>\n","import { Component, OnInit } from '@angular/core';\nimport { AccountService } from '../_services/account.service';\nimport { Observable } from 'rxjs';\nimport { User } from '../_models/user';\nimport { Router } from '@angular/router';\nimport { ToastrService } from 'ngx-toastr';\n\n@Component({\n  selector: 'app-root',\n  templateUrl: './root.component.html',\n  styleUrls: ['./root.component.css']\n})\nexport class RootComponent implements OnInit {\n  model: any = {}\n\n  constructor(public accountService: AccountService, private router: Router, \n    private toastr: ToastrService) { }\n\n  ngOnInit(): void {\n  }\n\n  login() {\n    this.accountService.login(this.model).subscribe(response => {\n      this.router.navigateByUrl('/users');\n    })\n  }\n\n  logout() {\n    this.accountService.logout();\n    this.router.navigateByUrl('/')\n  }\n\n}\n","<div class=\"container-fluid\">\n  <div class=\"row justify-content-center align-items-center vh-100\">\n    <div class=\"col-12 col-lg-9 col-xl-7\">\n      <div class=\"card shadow-2-strong card-registration\" style=\"border-radius: 15px;\">\n        <div class=\"card-body p-4 p-md-5 text-center\">\n  \n            <form #loginForm=\"ngForm\" class=\"form-signin\" (ngSubmit)=\"login()\" autocomplete=\"off\">\n              <h1 class=\"h3 mb-3 font-weight-normal\">Login</h1>\n  \n              <label for=\"inputUsername\" class=\"sr-only\">Username</label>\n              <input\n                name=\"username\"\n                [(ngModel)]=\"model.username\"\n                class=\"form-control mb-3\"\n                type=\"text\"\n                id=\"inputUsername\"\n                placeholder=\"Username\"\n                required\n                autofocus\n              >\n  \n              <label for=\"inputPassword\" class=\"sr-only\">Password</label>\n              <input\n                name=\"password\"\n                [(ngModel)]=\"model.password\"\n                class=\"form-control mb-3\"\n                type=\"password\"\n                id=\"inputPassword\"\n                placeholder=\"Password\"\n                required\n              >\n  \n              <button class=\"btn btn-lg btn-success btn-block\" type=\"submit\">Login</button>\n            </form>\n            \n          </div>\n        </div>\n      </div>\n    </div>\n  </div>\n  ","import { Component, OnInit } from '@angular/core';\nimport { HttpClient } from '@angular/common/http';\nimport { AccountService } from '../_services/account.service';\nimport { ToastrService } from 'ngx-toastr';\nimport { UntypedFormBuilder, UntypedFormGroup, Validators } from '@angular/forms';\ndeclare var $: any;\n\n@Component({\n  selector: 'app-users',\n  templateUrl: './users.component.html',\n  styleUrls: ['./users.component.css']\n})\nexport class UsersComponent implements OnInit {\n  users: any[] = [];\n  baseUrl = 'https://localhost:5001/api/';\n  confirmDeleteUser: any = null; \n  registerForm: UntypedFormGroup;\n  showPresentationField = false; \n  newUser: { firstName: string; secondName: string; emailAddress: string; university: string; };\n\n  constructor(\n    private httpClient: HttpClient, \n    public accountService: AccountService,\n    private toastr: ToastrService,\n    private formBuilder: UntypedFormBuilder,\n  ) {}\n  ngOnInit() {\n    this.initForm();\n    this.loadUsers();\n    this.newUser = { firstName: '', secondName: '', emailAddress: '', university: '' };\n  }\n  \n  initForm() {\n    this.registerForm = this.formBuilder.group({\n      firstName: ['', [Validators.required, Validators.minLength(2), Validators.maxLength(50)]],\n      secondName: ['', [Validators.required, Validators.minLength(2), Validators.maxLength(50)]],\n      emailAddress: ['', [Validators.required, Validators.email]],\n      university: ['', [Validators.required]],\n      presentation: [{value: '', disabled: true}, [Validators.minLength(2), Validators.maxLength(100)]] \n    });\n  }\n\n  togglePresentationField() {\n    this.showPresentationField = !this.showPresentationField;\n    if (this.showPresentationField) {\n      this.registerForm.get('presentation').enable();\n    } else {\n      this.registerForm.get('presentation').disable();\n    }\n  }\n\n  loadUsers() {\n    this.accountService.getUsers().subscribe(\n      (users: any[]) => {\n        this.users = users;\n      },\n      (error) => {\n        console.error('Error fetching users:', error);\n      }\n    );\n  }\n\n  registerUser() {\n    if (this.registerForm.valid) {\n      this.accountService.register(this.registerForm.value).subscribe(\n        (response: any) => {\n          this.users.push(response); \n          this.registerForm.reset();\n          this.toastr.success('User added successfully');\n          this.loadUsers();\n          $('#addUserModal').modal('hide');\n        },\n        (error) => {\n          console.error('Error adding user:', error);\n          this.toastr.error('Failed to add user');\n        }\n      );\n    } else {\n      this.toastr.error('Form is not valid!');\n    }\n  }\n\n  deleteUser(user: any) {\n    if (confirm('Are you sure you want to delete this user?')) {\n      this.accountService.deleteUser(user).subscribe(\n        () => {\n          this.users = this.users.filter(u => u !== user);\n          this.toastr.success('User deleted successfully');\n        },\n        (error) => {\n          console.error('Error deleting user:', error);\n          this.toastr.error('Failed to delete user');\n        }\n      );\n    }\n  }\n\n  sortUsers() {\n    this.users.sort((a, b) => a.firstName.localeCompare(b.firstName)); \n  }\n}\n","<div class=\"container-fluid\">\n  <div class=\"row justify-content-center align-items-center vh-100\">\n    <div class=\"col-20 col-lg-20 col-xl-20\">\n      <div class=\"card shadow-2-strong card-registration\" style=\"border-radius: 15px;\">\n        <div class=\"card-body p-3 p-md-3 text-center\">\n          <div class=\"users-container\" style=\"max-height: 600px; max-width: 1000px; overflow-y: auto;\">\n            <table class=\"table table-striped\">\n              <thead>\n                <tr>\n                  <th>Name</th>\n                  <th>Second Name</th>\n                  <th>Email</th>\n                  <th>University</th>\n                  <th>Actions</th>\n                </tr>\n              </thead>\n              <tbody>\n                <tr *ngFor=\"let user of users\">\n                  <td>{{ user.firstName }}</td>\n                  <td>{{ user.secondName }}</td>\n                  <td>{{ user.emailAddress }}</td>\n                  <td>{{ user.university }}</td>\n                  <td>\n                    <button class=\"btn btn-danger btn-sm\" (click)=\"deleteUser(user)\">Delete</button>\n                  </td>\n                </tr>\n              </tbody>\n            </table>\n          </div>\n\n          <button type=\"button\" class=\"btn btn-primary mb-3\" data-toggle=\"modal\" data-target=\"#addUserModal\">\n            Add User\n          </button>\n\n          <div class=\"modal fade\" id=\"addUserModal\" tabindex=\"-1\" role=\"dialog\" aria-labelledby=\"addUserModalLabel\" aria-hidden=\"true\">\n            <div class=\"modal-dialog modal-dialog-centered\" role=\"document\">\n              <div class=\"modal-content\">\n                <div class=\"modal-header\">\n                  <h5 class=\"modal-title\" id=\"addUserModalLabel\">Add New User</h5>\n                  <button type=\"button\" class=\"close\" data-dismiss=\"modal\" aria-label=\"Close\">\n                    <span aria-hidden=\"true\">&times;</span>\n                  </button>\n                </div>\n                <form [formGroup]=\"registerForm\" (ngSubmit)=\"registerUser()\" autocomplete=\"off\">\n                  <div class=\"modal-body\">\n                    \n                    \n                    \n                    \n                    <div class=\"form-group\">\n                      <input type=\"text\" class=\"form-control\" formControlName=\"firstName\" placeholder=\"First Name\">\n                      <small *ngIf=\"registerForm.controls.firstName.touched && registerForm.controls.firstName.errors\" class=\"text-danger\">\n                        <div *ngIf=\"registerForm.controls.firstName.errors.required\">First name is required.</div>\n                        <div *ngIf=\"registerForm.controls.firstName.errors.minlength\">First name must be at least 2 characters long.</div>\n                        <div *ngIf=\"registerForm.controls.firstName.errors.maxlength\">First name cannot be more than 50 characters long.</div>\n                      </small>\n                    </div>\n        \n                    <div class=\"form-group\">\n                      <input type=\"text\" class=\"form-control\" formControlName=\"secondName\" placeholder=\"Last Name\">\n                      <small *ngIf=\"registerForm.controls.secondName.touched && registerForm.controls.secondName.errors\" class=\"text-danger\">\n                        <div *ngIf=\"registerForm.controls.secondName.errors.required\">Last name is required.</div>\n                        <div *ngIf=\"registerForm.controls.secondName.errors.minlength\">Last name must be at least 2 characters long.</div>\n                        <div *ngIf=\"registerForm.controls.secondName.errors.maxlength\">Last name cannot be more than 50 characters long.</div>\n                      </small>\n                    </div>\n                    \n                      <div class=\"form-group\">\n                        <input type=\"email\" class=\"form-control\" formControlName=\"emailAddress\" placeholder=\"Email Address\">\n                        <small *ngIf=\"registerForm.controls.emailAddress.touched && registerForm.controls.emailAddress.errors\" class=\"text-danger\">\n                          <div *ngIf=\"registerForm.controls.emailAddress.errors.required\">Email is required.</div>\n                          <div *ngIf=\"registerForm.controls.emailAddress.errors.email\">Please enter a valid email address.</div>\n                        </small>\n                      </div>\n                    \n                      <div class=\"form-group\">\n                        <input type=\"text\" class=\"form-control\" formControlName=\"university\" placeholder=\"University\">\n                        <small *ngIf=\"registerForm.controls.university.touched && registerForm.controls.university.errors\" class=\"text-danger\">\n                          <div *ngIf=\"registerForm.controls.university.errors.required\">University is required.</div>\n                          <div *ngIf=\"registerForm.controls.university.errors.minlength\">University must be at least 2 characters long.</div>\n                          <div *ngIf=\"registerForm.controls.university.errors.maxlength\">University cannot be more than 50 characters long.</div>\n                        </small>\n                      </div>\n\n                      <div class=\"form-group\">\n                        <div class=\"form-check\">\n                          <input type=\"checkbox\" class=\"form-check-input\" id=\"presentationCheckbox\" (change)=\"togglePresentationField()\">\n                          <label class=\"form-check-label\" for=\"presentationCheckbox\">Presentation</label>\n                        </div>\n                      </div>\n\n                      <div class=\"form-group\">\n                        <input type=\"text\" class=\"form-control\" formControlName=\"presentation\" placeholder=\"Presentation Title\">\n                        <small *ngIf=\"registerForm.controls.presentation.touched && registerForm.controls.presentation.errors\" class=\"text-danger\">\n                          <div *ngIf=\"registerForm.controls.presentation.errors.required\">Presentation Title is required.</div>\n                          <div *ngIf=\"registerForm.controls.presentation.errors.minlength\">Presentation Title must be at least 2 characters long.</div>\n                          <div *ngIf=\"registerForm.controls.presentation.errors.maxlength\">Presentation Title cannot be more than 100 characters long.</div>\n                        </small>\n                      </div>\n\n                  </div>\n                  <div class=\"modal-footer\">\n                    <button type=\"button\" class=\"btn btn-secondary\" data-dismiss=\"modal\">Close</button>\n                    <button class=\"btn btn-success\" type=\"submit\" [disabled]=\"registerForm.invalid\">Register</button>\n                  </div>\n                </form>\n              </div>\n            </div>\n          </div>\n\n        </div> \n      </div> \n    </div> \n  </div> \n</div> \n","// This file can be replaced during build by using the `fileReplacements` array.\n// `ng build --prod` replaces `environment.ts` with `environment.prod.ts`.\n// The list of file replacements can be found in `angular.json`.\n\nexport const environment = {\n  production: false\n};\n\n/*\n * For easier debugging in development mode, you can import the following file\n * to ignore zone related error stack frames such as `zone.run`, `zoneDelegate.invokeTask`.\n *\n * This import should be commented out in production mode because it will have a negative impact\n * on performance if an error is thrown.\n */\n// import 'zone.js/plugins/zone-error';  // Included with Angular CLI.\n","import { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app/app.module';\nimport { environment } from './environments/environment';\n\nif (environment.production) {\n  enableProdMode();\n}\n\nplatformBrowserDynamic().bootstrapModule(AppModule)\n  .catch(err => console.error(err));\n"],"names":["inject","AccountService","ToastrService","map","authGuard","route","state","accountService","toastr","currentUser$","pipe","user","error","throwError","catchError","ErrorInterceptor","constructor","router","intercept","request","next","handle","status","errors","modalStateErrors","key","push","flat","statusText","navigateByUrl","navigationExtras","console","log","_","i0","ɵɵinject","i1","Router","i2","_2","factory","ɵfac","CommonModule","BsDropdownModule","ToastrModule","SharedModule","_3","forRoot","positionClass","imports","exports","ReplaySubject","of","http","baseUrl","currentUserSource","asObservable","registrationCompletedSource","registrationCompleted$","login","model","post","response","localStorage","setItem","JSON","stringify","register","setCurrentUser","logout","removeItem","getUsers","parse","getItem","token","headers","get","deleteUser","userToDelete","currentUser","HttpClient","providedIn","BehaviorSubject","PdfDisplayService","showPdfSource","currentShowPdf","changeShowPdf","showPdf","RouterModule","HomeComponent","TestErrorsComponent","NotFoundComponent","ServerErrorComponent","RegistrationComponent","ProgramComponent","ContactComponent","RootComponent","UsersComponent","GenerateProgramComponent","routes","path","component","runGuardsAndResolvers","canActivate","children","pathMatch","AppRoutingModule","AppComponent","title","ngOnInit","ɵɵdirectiveInject","selectors","decls","vars","consts","template","AppComponent_Template","rf","ctx","ɵɵelementStart","ɵɵelement","ɵɵelementEnd","BrowserModule","HttpClientModule","HTTP_INTERCEPTORS","FormsModule","BrowserAnimationsModule","NavComponent","FooterComponent","ReactiveFormsModule","RecaptchaModule","RecaptchaFormsModule","AppModule","bootstrap","provide","useClass","multi","declarations","ContactComponent_Template","ɵɵtext","NotFoundComponent_Template","ɵɵelementContainerStart","ɵɵelementContainerEnd","ɵɵadvance","ɵɵtextInterpolate1","ctx_r0","message","ɵɵtextInterpolate","details","navigation","getCurrentNavigation","extras","ServerErrorComponent_Template","ɵɵtemplate","ServerErrorComponent_ng_container_2_Template","ɵɵproperty","error_r2","TestErrorsComponent_div_11_li_2_Template","validationErrors","get404Error","subscribe","get400Error","get500Error","get401Error","get400ValidationError","TestErrorsComponent_Template","ɵɵlistener","TestErrorsComponent_Template_button_click_1_listener","TestErrorsComponent_Template_button_click_3_listener","TestErrorsComponent_Template_button_click_5_listener","TestErrorsComponent_Template_button_click_7_listener","TestErrorsComponent_Template_button_click_9_listener","TestErrorsComponent_div_11_Template","length","FooterComponent_Template","Validators","pdfMake","pdfFonts","user_r3","ɵɵtextInterpolate2","firstName","secondName","GenerateProgramComponent_tr_36_div_4_Template_input_ngModelChange_1_listener","$event","ɵɵrestoreView","_r16","ctx_r15","ɵɵnextContext","ɵɵresetView","tempName","ctx_r6","record_r4","name","GenerateProgramComponent_tr_36_div_8_Template_input_ngModelChange_1_listener","_r19","ctx_r18","tempSubject","ctx_r9","subject","GenerateProgramComponent_tr_36_div_12_Template_button_click_1_listener","_r23","i_r5","index","ctx_r21","saveChanges","GenerateProgramComponent_tr_36_div_12_Template_button_click_3_listener","ctx_r24","cancelEdit","GenerateProgramComponent_tr_36_ng_template_13_Template_button_click_0_listener","_r27","ctx_r25","editRecord","GenerateProgramComponent_tr_36_div_4_Template","GenerateProgramComponent_tr_36_ng_template_5_Template","ɵɵtemplateRefExtractor","GenerateProgramComponent_tr_36_div_8_Template","GenerateProgramComponent_tr_36_ng_template_9_Template","GenerateProgramComponent_tr_36_div_12_Template","GenerateProgramComponent_tr_36_ng_template_13_Template","time","ctx_r2","editingIndex","_r8","_r11","_r14","vfs","formBuilder","pdfDisplayService","records","users","initForm","loadUsers","recordForm","group","required","value","disabled","filter","presentation","trim","addRecord","valid","selectedUser","record","sort","a","b","timeA","split","Number","timeB","reset","disable","onUserChange","enable","setValue","saveAsPDF","_this","_asyncToGenerator","imageUrlBackground","base64ImageBackground","getImageBase64","imageUrlAgh","base64ImageAgh","imageUrlIsim","base64ImageIsim","chunkSize","chunks","i","chunk","slice","content","forEach","text","pageBreak","tableBody","style","stack","image","width","height","absolutePosition","x","y","table","widths","body","layout","hLineWidth","vLineWidth","paddingLeft","paddingRight","node","paddingTop","paddingBottom","alignment","margin","docDefinition","pageSize","pageMargins","styles","tableHeader","bold","fontSize","color","tableTitle","createPdf","download","url","responseType","toPromise","then","blob","Promise","resolve","reject","reader","FileReader","onloadend","result","onerror","readAsDataURL","UntypedFormBuilder","i3","i4","GenerateProgramComponent_Template","GenerateProgramComponent_Template_form_ngSubmit_5_listener","GenerateProgramComponent_Template_select_ngModelChange_13_listener","GenerateProgramComponent_option_14_Template","GenerateProgramComponent_Template_button_click_22_listener","GenerateProgramComponent_tr_36_Template","registerMode","registerToggle","cancelRegisterMode","event","HomeComponent_Template","NavComponent_div_10_div_4_Template_a_click_1_listener","_r7","NavComponent_div_10_div_4_Template","ɵɵpipeBind1","user_r4","username","NavComponent_Template","NavComponent_ng_container_6_Template","NavComponent_ng_template_8_Template","NavComponent_div_10_Template","_r2","openPdf","pdfUrl","window","open","ProgramComponent_Template","ProgramComponent_Template_button_click_6_listener","EventEmitter","RegistrationComponent_form_5_small_6_div_1_Template","RegistrationComponent_form_5_small_6_div_2_Template","RegistrationComponent_form_5_small_6_div_3_Template","registerForm","controls","minlength","maxlength","RegistrationComponent_form_5_small_9_div_1_Template","RegistrationComponent_form_5_small_9_div_2_Template","RegistrationComponent_form_5_small_9_div_3_Template","ctx_r3","RegistrationComponent_form_5_small_12_div_1_Template","RegistrationComponent_form_5_small_12_div_2_Template","ctx_r4","emailAddress","email","RegistrationComponent_form_5_small_15_div_1_Template","RegistrationComponent_form_5_small_15_div_2_Template","RegistrationComponent_form_5_small_15_div_3_Template","ctx_r5","university","RegistrationComponent_form_5_small_23_div_1_Template","RegistrationComponent_form_5_small_23_div_2_Template","RegistrationComponent_form_5_small_23_div_3_Template","RegistrationComponent_form_5_Template_form_ngSubmit_0_listener","_r22","RegistrationComponent_form_5_small_6_Template","RegistrationComponent_form_5_small_9_Template","RegistrationComponent_form_5_small_12_Template","RegistrationComponent_form_5_small_15_Template","RegistrationComponent_form_5_Template_input_change_18_listener","ctx_r23","togglePresentationField","RegistrationComponent_form_5_small_23_Template","RegistrationComponent_form_5_Template_re_captcha_resolved_26_listener","resolved","RegistrationComponent_form_5_Template_button_click_29_listener","cancel","touched","siteKey","invalid","cancelRegister","registrationCompleted","presentationCheckboxChecked","completed","minLength","maxLength","recaptchaReactive","emit","outputs","RegistrationComponent_Template","RegistrationComponent_form_5_Template","RegistrationComponent_div_6_Template","RootComponent_Template","RootComponent_Template_form_ngSubmit_5_listener","RootComponent_Template_input_ngModelChange_11_listener","RootComponent_Template_input_ngModelChange_14_listener","password","UsersComponent_tr_20_Template_button_click_10_listener","restoredCtx","user_r6","$implicit","ctx_r7","UsersComponent_small_36_div_1_Template","UsersComponent_small_36_div_2_Template","UsersComponent_small_36_div_3_Template","ctx_r1","UsersComponent_small_39_div_1_Template","UsersComponent_small_39_div_2_Template","UsersComponent_small_39_div_3_Template","UsersComponent_small_42_div_1_Template","UsersComponent_small_42_div_2_Template","UsersComponent_small_45_div_1_Template","UsersComponent_small_45_div_2_Template","UsersComponent_small_45_div_3_Template","UsersComponent_small_53_div_1_Template","UsersComponent_small_53_div_2_Template","UsersComponent_small_53_div_3_Template","httpClient","confirmDeleteUser","showPresentationField","newUser","registerUser","success","$","modal","confirm","u","sortUsers","localeCompare","UsersComponent_Template","UsersComponent_tr_20_Template","UsersComponent_Template_form_ngSubmit_32_listener","UsersComponent_small_36_Template","UsersComponent_small_39_Template","UsersComponent_small_42_Template","UsersComponent_small_45_Template","UsersComponent_Template_input_change_48_listener","UsersComponent_small_53_Template","environment","production","enableProdMode","__NgCli_bootstrap_1","platformBrowser","bootstrapModule","catch","err"],"sourceRoot":"webpack:///","x_google_ignoreList":[]}